/*
Copyright (c) 2017, Massachusetts Institute of Technology All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

Redistributions of source code must retain the above copyright notice, this
list of conditions and the following disclaimer.

Redistributions in binary form must reproduce the above copyright notice, this
list of conditions and the following disclaimer in the documentation and/or
other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class MDSplus_Connection */

#ifndef _Included_MDSplus_Connection
#define _Included_MDSplus_Connection
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     MDSplus_Connection
 * Method:    connectToMds
 * Signature: (LMDSplus/String;)I
 */
  JNIEXPORT jint JNICALL Java_MDSplus_Connection_connectToMds(JNIEnv *, jobject, jstring);

/*
 * Class:     MDSplus_Connection
 * Method:    disconnectFromMds
 * Signature: (I)V
 */
  JNIEXPORT void JNICALL Java_MDSplus_Connection_disconnectFromMds(JNIEnv *, jobject, jint);

/*
 * Class:     MDSplus_Connection
 * Method:    openTree
 * Signature: (ILjava/lang/String;I)V
 */
  JNIEXPORT void JNICALL Java_MDSplus_Connection_openTree(JNIEnv *, jobject, jint, jstring, jint);

/*
 * Class:     MDSplus_Connection
 * Method:    closeTree
 * Signature: (I)V
 */
  JNIEXPORT void JNICALL Java_MDSplus_Connection_closeTree(JNIEnv *, jobject, jint);

/*
 * Class:     MDSplus_Connection
 * Method:    setDefault
 * Signature: (ILjava/lang/String;)V
 */
  JNIEXPORT void JNICALL Java_MDSplus_Connection_setDefault(JNIEnv *, jobject, jint, jstring);

/*
 * Class:     MDSplus_Connection
 * Method:    get
 * Signature: (ILjava/lang/String;[LMDSplus/Data;)LMDSplus/Data;
 */
  JNIEXPORT jobject JNICALL Java_MDSplus_Connection_get
      (JNIEnv *, jobject, jint, jstring, jobjectArray);

/*
 * Class:     MDSplus_Connection
 * Method:    put
 * Signature: (ILjava/lang/String;Ljava/lang/String;[LMDSplus/Data;)V
 */
  JNIEXPORT void JNICALL Java_MDSplus_Connection_put
      (JNIEnv *, jobject, jint, jstring, jstring, jobjectArray);

#ifdef __cplusplus
}
#endif
#endif
