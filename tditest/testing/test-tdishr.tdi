# allocations _$0 should end with "/test-tdishr.tdi"
EXTRACT(len(_$0)-16,16,_$0)
# deallocate _$0 as it varies with os in tests
deallocate(_$0)
_a=1
allocated(_a)
show_private(_a)
show_private()
deallocate()
allocated(_a)
show_private()
#
# Functions implemented in TdiAbs.c
#
abs(255bu)
abs([255bu,1bu,254bu])
abs(65535wu)
abs([65535wu,1wu,65534wu])
abs(2147483647lu)
abs([2147483647lu,1lu,2147483648lu])
abs(0xffffffffffqu)
abs([0xffffffffffqu,1qu,0xfffffffffffqu])
abs(0xffffffffffffffffffou)
abs([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
abs(-127b)
abs([-127b,1b,-126b])
abs(-32767w)
abs([-32767w,1w,-32766w])
abs(-2147483647L)
abs([-2147483647L,1L,-2147483646L])
abs(-2147483648q)
abs([-2147483648q,1q,-2147483647q])
abs(-2147483648o)
abs([-2147483648o,1o,-2147483647o])
abs(f_float(-42.))
abs(f_float([-42.,1,-43E11]))
abs(g_float(-42.))
abs(g_float([-42.,1,-43E11]))
abs(d_float(-42.))
abs(d_float([-42.,1,-43E11]))
abs(f_complex(-42.,-43))
abs([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
abs(g_complex(-42.,-43))
abs([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
abs(d_complex(-42.,-43))
abs([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
abs1(255bu)
abs1([255bu,1bu,254bu])
abs1(65535wu)
abs1([65535wu,1wu,65534wu])
abs1(2147483647lu)
abs1([2147483647lu,1lu,2147483648lu])
abs1(0xffffffffffqu)
abs1([0xffffffffffqu,1qu,0xfffffffffffqu])
abs1(0xffffffffffffffffffou)
abs1([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
abs1(-127b)
abs1([-127b,1b,-126b])
abs1(-32767w)
abs1([-32767w,1w,-32766w])
abs1(-2147483647L)
abs1([-2147483647L,1L,-2147483646L])
abs1(-2147483648q)
abs1([-2147483648q,1q,-2147483647q])
abs1(-2147483648o)
abs1([-2147483648o,1o,-2147483647o])
abs1(f_float(-42.))
abs1(f_float([-42.,1,-43E11]))
abs1(g_float(-42.))
abs1(g_float([-42.,1,-43E11]))
abs1(d_float(-42.))
abs1(d_float([-42.,1,-43E11]))
abs1(f_complex(-42.,-43))
abs1([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
abs1(g_complex(-42.,-43))
abs1([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
abs1(d_complex(-42.,-43))
abs1([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
abssq(255bu)
abssq([255bu,1bu,254bu])
abssq(65535wu)
abssq([65535wu,1wu,65534wu])
abssq(2147483647lu)
abssq([2147483647lu,1lu,2147483648lu])
abssq(0xffffffffffqu)
abssq([0xffffffffffqu,1qu,0xfffffffffffqu])
abssq(0xffffffffffffffffffou)
abssq([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
abssq(-127b)
abssq([-127b,1b,-126b])
abssq(-32767w)
abssq([-32767w,1w,-32766w])
abssq(-2147483647L)
abssq([-2147483647L,1L,-2147483646L])
abssq(-2147483648q)
abssq([-2147483648q,1q,-2147483647q])
abssq(-2147483648o)
abssq([-2147483648o,1o,-2147483647o])
abssq(f_float(-42.))
abssq(f_float([-42.,1,-43E11]))
abssq(g_float(-42.))
abssq(g_float([-42.,1,-43E11]))
abssq(d_float(-42.))
abssq(d_float([-42.,1,-43E11]))
abssq(f_complex(-42.,-43))
abssq([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
abssq(g_complex(-42.,-43))
abssq([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
abssq(d_complex(-42.,-43))
abssq([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
aimag(255bu)
aimag([255bu,1bu,254bu])
aimag(65535wu)
aimag([65535wu,1wu,65534wu])
aimag(2147483647lu)
aimag([2147483647lu,1lu,2147483648lu])
aimag(0xffffffffffqu)
aimag([0xffffffffffqu,1qu,0xfffffffffffqu])
aimag(0xffffffffffffffffffou)
aimag([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
aimag(-127b)
aimag([-127b,1b,-126b])
aimag(-32767w)
aimag([-32767w,1w,-32766w])
aimag(-2147483647L)
aimag([-2147483647L,1L,-2147483646L])
aimag(-2147483648q)
aimag([-2147483648q,1q,-2147483647q])
aimag(-2147483648o)
aimag([-2147483648o,1o,-2147483647o])
aimag(f_float(-42.))
aimag(f_float([-42.,1,-43E11]))
aimag(g_float(-42.))
aimag(g_float([-42.,1,-43E11]))
aimag(d_float(-42.))
aimag(d_float([-42.,1,-43E11]))
aimag(f_complex(-42.,-43))
aimag([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
aimag(g_complex(-42.,-43))
aimag([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
aimag(d_complex(-42.,-43))
aimag([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
conjg(255bu)
conjg([255bu,1bu,254bu])
conjg(65535wu)
conjg([65535wu,1wu,65534wu])
conjg(2147483647lu)
conjg([2147483647lu,1lu,2147483648lu])
conjg(0xffffffffffqu)
conjg([0xffffffffffqu,1qu,0xfffffffffffqu])
conjg(0xffffffffffffffffffou)
conjg([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
conjg(-127b)
conjg([-127b,1b,-126b])
conjg(-32767w)
conjg([-32767w,1w,-32766w])
conjg(-2147483647L)
conjg([-2147483647L,1L,-2147483646L])
conjg(-2147483648q)
conjg([-2147483648q,1q,-2147483647q])
conjg(-2147483648o)
conjg([-2147483648o,1o,-2147483647o])
conjg(f_float(-42.))
conjg(f_float([-42.,1,-43E11]))
conjg(g_float(-42.))
conjg(g_float([-42.,1,-43E11]))
conjg(d_float(-42.))
conjg(d_float([-42.,1,-43E11]))
conjg(f_complex(-42.,-43))
conjg([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
conjg(g_complex(-42.,-43))
conjg([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
conjg(d_complex(-42.,-43))
conjg([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
inot(255bu)
inot([255bu,1bu,254bu])
inot(65535wu)
inot([65535wu,1wu,65534wu])
inot(2147483647lu)
inot([2147483647lu,1lu,2147483648lu])
inot(0xffffffffffqu)
inot([0xffffffffffqu,1qu,0xfffffffffffqu])
inot(0xffffffffffffffffffou)
inot([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
inot(-127b)
inot([-127b,1b,-126b])
inot(-32767w)
inot([-32767w,1w,-32766w])
inot(-2147483647L)
inot([-2147483647L,1L,-2147483646L])
inot(-2147483648q)
inot([-2147483648q,1q,-2147483647q])
inot(-2147483648o)
inot([-2147483648o,1o,-2147483647o])
inot(f_float(-42.))
inot(f_float([-42.,1,-43E11]))
inot(g_float(-42.))
inot(g_float([-42.,1,-43E11]))
inot(d_float(-42.))
inot(d_float([-42.,1,-43E11]))
inot(f_complex(-42.,-43))
inot([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
inot(g_complex(-42.,-43))
inot([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
inot(d_complex(-42.,-43))
inot([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
logical(255bu)
logical([255bu,1bu,254bu])
logical(65535wu)
logical([65535wu,1wu,65534wu])
logical(2147483647lu)
logical([2147483647lu,1lu,2147483648lu])
logical(0xffffffffffqu)
logical([0xffffffffffqu,1qu,0xfffffffffffqu])
logical(0xffffffffffffffffffou)
logical([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
logical(-127b)
logical([-127b,1b,-126b])
logical(-32767w)
logical([-32767w,1w,-32766w])
logical(-2147483647L)
logical([-2147483647L,1L,-2147483646L])
logical(-2147483648q)
logical([-2147483648q,1q,-2147483647q])
logical(-2147483648o)
logical([-2147483648o,1o,-2147483647o])
logical(f_float(-42.))
logical(f_float([-42.,1,-43E11]))
logical(g_float(-42.))
logical(g_float([-42.,1,-43E11]))
logical(d_float(-42.))
logical(d_float([-42.,1,-43E11]))
logical(f_complex(-42.,-43))
logical([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
logical(g_complex(-42.,-43))
logical([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
logical(d_complex(-42.,-43))
logical([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
not(255bu)
not([255bu,1bu,254bu])
not(65535wu)
not([65535wu,1wu,65534wu])
not(2147483647lu)
not([2147483647lu,1lu,2147483648lu])
not(0xffffffffffqu)
not([0xffffffffffqu,1qu,0xfffffffffffqu])
not(0xffffffffffffffffffou)
not([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
not(-127b)
not([-127b,1b,-126b])
not(-32767w)
not([-32767w,1w,-32766w])
not(-2147483647L)
not([-2147483647L,1L,-2147483646L])
not(-2147483648q)
not([-2147483648q,1q,-2147483647q])
not(-2147483648o)
not([-2147483648o,1o,-2147483647o])
not(f_float(-42.))
not(f_float([-42.,1,-43E11]))
not(g_float(-42.))
not(g_float([-42.,1,-43E11]))
not(d_float(-42.))
not(d_float([-42.,1,-43E11]))
not(f_complex(-42.,-43))
not([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
not(g_complex(-42.,-43))
not([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
not(d_complex(-42.,-43))
not([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
nint(255bu)
nint([255bu,1bu,254bu])
nint(65535wu)
nint([65535wu,1wu,65534wu])
nint(2147483647lu)
nint([2147483647lu,1lu,2147483648lu])
nint(0xffffffffffqu)
nint([0xffffffffffqu,1qu,0xfffffffffffqu])
nint(0xffffffffffffffffffou)
nint([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
nint(-127b)
nint([-127b,1b,-126b])
nint(-32767w)
nint([-32767w,1w,-32766w])
nint(-2147483647L)
nint([-2147483647L,1L,-2147483646L])
nint(-2147483648q)
nint([-2147483648q,1q,-2147483647q])
nint(-2147483648o)
nint([-2147483648o,1o,-2147483647o])
nint(f_float(-42.5))
nint(f_float([-42.5,1.5,1.49,-43E11]))
nint(g_float(-42.5))
nint(g_float([-42.5,1.5,1.49,-43E11]))
nint(d_float(-42.5))
nint(d_float([-42.5,1.5,1.49,-43E11]))
nint(f_complex(-42.5,-43))
nint([f_complex(-42.5,-43),f_complex(1.5,100),f_complex(1.49,0.)])
nint(g_complex(-42.5,-43))
nint([g_complex(-42.5,-43),g_complex(1.5,100),g_complex(1.49,0.)])
nint(d_complex(-42.5,-43))
nint([d_complex(-42.5,-43),d_complex(1.5,100),d_complex(1.49,0.)])
unary_minus(255bu)
unary_minus([255bu,1bu,254bu])
unary_minus(65535wu)
unary_minus([65535wu,1wu,65534wu])
unary_minus(2147483647lu)
unary_minus([2147483647lu,1lu,2147483648lu])
unary_minus(0xffffffffffqu)
unary_minus([0xffffffffffqu,1qu,0xfffffffffffqu])
unary_minus(0xffffffffffffffffffou)
unary_minus([0xffffffffffffffffffou,1ou,0xffffffffffffffffffffou])
unary_minus(-127b)
unary_minus([-127b,1b,-126b])
unary_minus(-32767w)
unary_minus([-32767w,1w,-32766w])
unary_minus(-2147483647L)
unary_minus([-2147483647L,1L,-2147483646L])
unary_minus(-2147483648q)
unary_minus([-2147483648q,1q,-2147483647q])
unary_minus(-2147483648o)
unary_minus([-2147483648o,1o,-2147483647o])
unary_minus(f_float(-42.))
unary_minus(f_float([-42.,1,-43E11]))
unary_minus(g_float(-42.))
unary_minus(g_float([-42.,1,-43E11]))
unary_minus(d_float(-42.))
unary_minus(d_float([-42.,1,-43E11]))
unary_minus(f_complex(-42.,-43))
unary_minus([f_complex(-42.,-43),f_complex(-100.,100),f_complex(0.,0.)])
unary_minus(g_complex(-42.,-43))
unary_minus([g_complex(-42.,-43),g_complex(-100.,100),g_complex(0.,0.)])
unary_minus(d_complex(-42.,-43))
unary_minus([d_complex(-42.,-43),d_complex(-100.,100),d_complex(0.,0.)])
#
# Functions implemented in TdiAdd.c
#
add(42bu,43bu)
add([42bu,1bu,43bu],42bu)
add(42bu,[42bu,1bu,43bu])
add([42bu,1bu,43bu],[42bu,1bu,43bu])
add(42wu,43wu)
add([42wu,1wu,43wu],42wu)
add(42wu,[42wu,1wu,43wu])
add([42wu,1wu,43wu],[42wu,1wu,43wu])
add(42lu,43lu)
add([42lu,1lu,43lu],42lu)
add(42lu,[42lu,1lu,43lu])
add([42lu,1lu,43lu],[42lu,1lu,43lu])
add(42qu,43qu)
add([42qu,1qu,43qu],42qu)
add(42qu,[42qu,1qu,43qu])
add([42qu,1qu,43qu],[42qu,1qu,43qu])
add(42ou,43ou)
add([42ou,1ou,43ou],42ou)
add(42ou,[42ou,1ou,43ou])
add([42ou,1ou,43ou],[42ou,1ou,43ou])
add(42b,43b)
add([42b,1b,43b],42b)
add(42b,[42b,1b,43b])
add([42b,1b,43b],[42b,1b,43b])
add(42w,43w)
add([42w,1w,43w],42w)
add(42w,[42w,1w,43w])
add([42w,1w,43w],[42w,1w,43w])
add(42l,43l)
add([42l,1l,43l],42l)
add(42l,[42l,1l,43l])
add([42l,1l,43l],[42l,1l,43l])
add(42q,43q)
add([42q,1q,43q],42q)
add(42q,[42q,1q,43q])
add([42q,1q,43q],[42q,1q,43q])
add(42o,43o)
add([42o,1o,43o],42o)
add(42o,[42o,1o,43o])
add([42o,1o,43o],[42o,1o,43o])
add(f_float(42),f_float(43))
add([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
add(f_float(42),[f_float(42),f_float(1),f_float(43)])
add([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
add(g_float(42),g_float(43))
add([g_float(42),g_float(1),g_float(43)],g_float(42))
add(g_float(42),[g_float(42),g_float(1),g_float(43)])
add([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
add(d_float(42),d_float(43))
add([d_float(42),d_float(1),d_float(43)],d_float(42))
add(d_float(42),[d_float(42),d_float(1),d_float(43)])
add([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
add(f_complex(42,43),f_complex(43,44))
add([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
add(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
add([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
add(g_complex(42,43),g_complex(43,44))
add([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
add(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
add([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
add(d_complex(42,43),d_complex(43,44))
add([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
add(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
add([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
subtract(42bu,43bu)
subtract([42bu,1bu,43bu],42bu)
subtract(42bu,[42bu,1bu,43bu])
subtract([42bu,1bu,43bu],[42bu,1bu,43bu])
subtract(42wu,43wu)
subtract([42wu,1wu,43wu],42wu)
subtract(42wu,[42wu,1wu,43wu])
subtract([42wu,1wu,43wu],[42wu,1wu,43wu])
subtract(42lu,43lu)
subtract([42lu,1lu,43lu],42lu)
subtract(42lu,[42lu,1lu,43lu])
subtract([42lu,1lu,43lu],[42lu,1lu,43lu])
subtract(42qu,43qu)
subtract([42qu,1qu,43qu],42qu)
subtract(42qu,[42qu,1qu,43qu])
subtract([42qu,1qu,43qu],[42qu,1qu,43qu])
subtract(42ou,43ou)
subtract([42ou,1ou,43ou],42ou)
subtract(42ou,[42ou,1ou,43ou])
subtract([42ou,1ou,43ou],[42ou,1ou,43ou])
subtract(42b,43b)
subtract([42b,1b,43b],42b)
subtract(42b,[42b,1b,43b])
subtract([42b,1b,43b],[42b,1b,43b])
subtract(42w,43w)
subtract([42w,1w,43w],42w)
subtract(42w,[42w,1w,43w])
subtract([42w,1w,43w],[42w,1w,43w])
subtract(42l,43l)
subtract([42l,1l,43l],42l)
subtract(42l,[42l,1l,43l])
subtract([42l,1l,43l],[42l,1l,43l])
subtract(42q,43q)
subtract([42q,1q,43q],42q)
subtract(42q,[42q,1q,43q])
subtract([42q,1q,43q],[42q,1q,43q])
subtract(42o,43o)
subtract([42o,1o,43o],42o)
subtract(42o,[42o,1o,43o])
subtract([42o,1o,43o],[42o,1o,43o])
subtract(f_float(42),f_float(43))
subtract([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
subtract(f_float(42),[f_float(42),f_float(1),f_float(43)])
subtract([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
subtract(g_float(42),g_float(43))
subtract([g_float(42),g_float(1),g_float(43)],g_float(42))
subtract(g_float(42),[g_float(42),g_float(1),g_float(43)])
subtract([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
subtract(d_float(42),d_float(43))
subtract([d_float(42),d_float(1),d_float(43)],d_float(42))
subtract(d_float(42),[d_float(42),d_float(1),d_float(43)])
subtract([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
subtract(f_complex(42,43),f_complex(43,44))
subtract([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
subtract(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
subtract([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
subtract(g_complex(42,43),g_complex(43,44))
subtract([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
subtract(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
subtract([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
subtract(d_complex(42,43),d_complex(43,44))
subtract([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
subtract(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
subtract([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
multiply(42bu,43bu)
multiply([42bu,1bu,43bu],42bu)
multiply(42bu,[42bu,1bu,43bu])
multiply([42bu,1bu,43bu],[42bu,1bu,43bu])
multiply(42wu,43wu)
multiply([42wu,1wu,43wu],42wu)
multiply(42wu,[42wu,1wu,43wu])
multiply([42wu,1wu,43wu],[42wu,1wu,43wu])
multiply(42lu,43lu)
multiply([42lu,1lu,43lu],42lu)
multiply(42lu,[42lu,1lu,43lu])
multiply([42lu,1lu,43lu],[42lu,1lu,43lu])
multiply(42qu,43qu)
multiply([42qu,1qu,43qu],42qu)
multiply(42qu,[42qu,1qu,43qu])
multiply([42qu,1qu,43qu],[42qu,1qu,43qu])
multiply(42ou,43ou)
multiply([42ou,1ou,43ou],42ou)
multiply(42ou,[42ou,1ou,43ou])
multiply([42ou,1ou,43ou],[42ou,1ou,43ou])
multiply(42b,43b)
multiply([42b,1b,43b],42b)
multiply(42b,[42b,1b,43b])
multiply([42b,1b,43b],[42b,1b,43b])
multiply(42w,43w)
multiply([42w,1w,43w],42w)
multiply(42w,[42w,1w,43w])
multiply([42w,1w,43w],[42w,1w,43w])
multiply(42l,43l)
multiply([42l,1l,43l],42l)
multiply(42l,[42l,1l,43l])
multiply([42l,1l,43l],[42l,1l,43l])
multiply(42q,43q)
multiply([42q,1q,43q],42q)
multiply(42q,[42q,1q,43q])
multiply([42q,1q,43q],[42q,1q,43q])
multiply(42o,43o)
multiply([42o,1o,43o],42o)
multiply(42o,[42o,1o,43o])
multiply([42o,1o,43o],[42o,1o,43o])
multiply(f_float(42),f_float(43))
multiply([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
multiply(f_float(42),[f_float(42),f_float(1),f_float(43)])
multiply([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
multiply(g_float(42),g_float(43))
multiply([g_float(42),g_float(1),g_float(43)],g_float(42))
multiply(g_float(42),[g_float(42),g_float(1),g_float(43)])
multiply([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
multiply(d_float(42),d_float(43))
multiply([d_float(42),d_float(1),d_float(43)],d_float(42))
multiply(d_float(42),[d_float(42),d_float(1),d_float(43)])
multiply([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
multiply(f_complex(42,43),f_complex(43,44))
multiply([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
multiply(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
multiply([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
multiply(g_complex(42,43),g_complex(43,44))
multiply([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
multiply(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
multiply([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
multiply(d_complex(42,43),d_complex(43,44))
multiply([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
multiply(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
multiply([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
#
# Functions implemented TdiAnd.c
#
and(42bu,43bu)
and([42bu,1bu,43bu],42bu)
and(42bu,[42bu,1bu,43bu])
and([42bu,1bu,43bu],[42bu,1bu,43bu])
and(42wu,43wu)
and([42wu,1wu,43wu],42wu)
and(42wu,[42wu,1wu,43wu])
and([42wu,1wu,43wu],[42wu,1wu,43wu])
and(42lu,43lu)
and([42lu,1lu,43lu],42lu)
and(42lu,[42lu,1lu,43lu])
and([42lu,1lu,43lu],[42lu,1lu,43lu])
and(42qu,43qu)
and([42qu,1qu,43qu],42qu)
and(42qu,[42qu,1qu,43qu])
and([42qu,1qu,43qu],[42qu,1qu,43qu])
and(42ou,43ou)
and([42ou,1ou,43ou],42ou)
and(42ou,[42ou,1ou,43ou])
and([42ou,1ou,43ou],[42ou,1ou,43ou])
and(42b,43b)
and([42b,1b,43b],42b)
and(42b,[42b,1b,43b])
and([42b,1b,43b],[42b,1b,43b])
and(42w,43w)
and([42w,1w,43w],42w)
and(42w,[42w,1w,43w])
and([42w,1w,43w],[42w,1w,43w])
and(42l,43l)
and([42l,1l,43l],42l)
and(42l,[42l,1l,43l])
and([42l,1l,43l],[42l,1l,43l])
and(42q,43q)
and([42q,1q,43q],42q)
and(42q,[42q,1q,43q])
and([42q,1q,43q],[42q,1q,43q])
and(42o,43o)
and([42o,1o,43o],42o)
and(42o,[42o,1o,43o])
and([42o,1o,43o],[42o,1o,43o])
and(f_float(42),f_float(43))
and([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
and(f_float(42),[f_float(42),f_float(1),f_float(43)])
and([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
and(g_float(42),g_float(43))
and([g_float(42),g_float(1),g_float(43)],g_float(42))
and(g_float(42),[g_float(42),g_float(1),g_float(43)])
and([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
and(d_float(42),d_float(43))
and([d_float(42),d_float(1),d_float(43)],d_float(42))
and(d_float(42),[d_float(42),d_float(1),d_float(43)])
and([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
and(f_complex(42,43),f_complex(43,44))
and([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
and(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
and([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
and(g_complex(42,43),g_complex(43,44))
and([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
and(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
and([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
and(d_complex(42,43),d_complex(43,44))
and([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
and(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
and([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
and_not(42bu,43bu)
and_not([42bu,1bu,43bu],42bu)
and_not(42bu,[42bu,1bu,43bu])
and_not([42bu,1bu,43bu],[42bu,1bu,43bu])
and_not(42wu,43wu)
and_not([42wu,1wu,43wu],42wu)
and_not(42wu,[42wu,1wu,43wu])
and_not([42wu,1wu,43wu],[42wu,1wu,43wu])
and_not(42lu,43lu)
and_not([42lu,1lu,43lu],42lu)
and_not(42lu,[42lu,1lu,43lu])
and_not([42lu,1lu,43lu],[42lu,1lu,43lu])
and_not(42qu,43qu)
and_not([42qu,1qu,43qu],42qu)
and_not(42qu,[42qu,1qu,43qu])
and_not([42qu,1qu,43qu],[42qu,1qu,43qu])
and_not(42ou,43ou)
and_not([42ou,1ou,43ou],42ou)
and_not(42ou,[42ou,1ou,43ou])
and_not([42ou,1ou,43ou],[42ou,1ou,43ou])
and_not(42b,43b)
and_not([42b,1b,43b],42b)
and_not(42b,[42b,1b,43b])
and_not([42b,1b,43b],[42b,1b,43b])
and_not(42w,43w)
and_not([42w,1w,43w],42w)
and_not(42w,[42w,1w,43w])
and_not([42w,1w,43w],[42w,1w,43w])
and_not(42l,43l)
and_not([42l,1l,43l],42l)
and_not(42l,[42l,1l,43l])
and_not([42l,1l,43l],[42l,1l,43l])
and_not(42q,43q)
and_not([42q,1q,43q],42q)
and_not(42q,[42q,1q,43q])
and_not([42q,1q,43q],[42q,1q,43q])
and_not(42o,43o)
and_not([42o,1o,43o],42o)
and_not(42o,[42o,1o,43o])
and_not([42o,1o,43o],[42o,1o,43o])
and_not(f_float(42),f_float(43))
and_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
and_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
and_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
and_not(g_float(42),g_float(43))
and_not([g_float(42),g_float(1),g_float(43)],g_float(42))
and_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
and_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
and_not(d_float(42),d_float(43))
and_not([d_float(42),d_float(1),d_float(43)],d_float(42))
and_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
and_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
and_not(f_complex(42,43),f_complex(43,44))
and_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
and_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
and_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
and_not(g_complex(42,43),g_complex(43,44))
and_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
and_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
and_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
and_not(d_complex(42,43),d_complex(43,44))
and_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
and_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
and_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nand(42bu,43bu)
nand([42bu,1bu,43bu],42bu)
nand(42bu,[42bu,1bu,43bu])
nand([42bu,1bu,43bu],[42bu,1bu,43bu])
nand(42wu,43wu)
nand([42wu,1wu,43wu],42wu)
nand(42wu,[42wu,1wu,43wu])
nand([42wu,1wu,43wu],[42wu,1wu,43wu])
nand(42lu,43lu)
nand([42lu,1lu,43lu],42lu)
nand(42lu,[42lu,1lu,43lu])
nand([42lu,1lu,43lu],[42lu,1lu,43lu])
nand(42qu,43qu)
nand([42qu,1qu,43qu],42qu)
nand(42qu,[42qu,1qu,43qu])
nand([42qu,1qu,43qu],[42qu,1qu,43qu])
nand(42ou,43ou)
nand([42ou,1ou,43ou],42ou)
nand(42ou,[42ou,1ou,43ou])
nand([42ou,1ou,43ou],[42ou,1ou,43ou])
nand(42b,43b)
nand([42b,1b,43b],42b)
nand(42b,[42b,1b,43b])
nand([42b,1b,43b],[42b,1b,43b])
nand(42w,43w)
nand([42w,1w,43w],42w)
nand(42w,[42w,1w,43w])
nand([42w,1w,43w],[42w,1w,43w])
nand(42l,43l)
nand([42l,1l,43l],42l)
nand(42l,[42l,1l,43l])
nand([42l,1l,43l],[42l,1l,43l])
nand(42q,43q)
nand([42q,1q,43q],42q)
nand(42q,[42q,1q,43q])
nand([42q,1q,43q],[42q,1q,43q])
nand(42o,43o)
nand([42o,1o,43o],42o)
nand(42o,[42o,1o,43o])
nand([42o,1o,43o],[42o,1o,43o])
nand(f_float(42),f_float(43))
nand([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
nand(f_float(42),[f_float(42),f_float(1),f_float(43)])
nand([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
nand(g_float(42),g_float(43))
nand([g_float(42),g_float(1),g_float(43)],g_float(42))
nand(g_float(42),[g_float(42),g_float(1),g_float(43)])
nand([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
nand(d_float(42),d_float(43))
nand([d_float(42),d_float(1),d_float(43)],d_float(42))
nand(d_float(42),[d_float(42),d_float(1),d_float(43)])
nand([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
nand(f_complex(42,43),f_complex(43,44))
nand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
nand(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nand(g_complex(42,43),g_complex(43,44))
nand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
nand(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nand(d_complex(42,43),d_complex(43,44))
nand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
nand(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nand_not(42bu,43bu)
nand_not([42bu,1bu,43bu],42bu)
nand_not(42bu,[42bu,1bu,43bu])
nand_not([42bu,1bu,43bu],[42bu,1bu,43bu])
nand_not(42wu,43wu)
nand_not([42wu,1wu,43wu],42wu)
nand_not(42wu,[42wu,1wu,43wu])
nand_not([42wu,1wu,43wu],[42wu,1wu,43wu])
nand_not(42lu,43lu)
nand_not([42lu,1lu,43lu],42lu)
nand_not(42lu,[42lu,1lu,43lu])
nand_not([42lu,1lu,43lu],[42lu,1lu,43lu])
nand_not(42qu,43qu)
nand_not([42qu,1qu,43qu],42qu)
nand_not(42qu,[42qu,1qu,43qu])
nand_not([42qu,1qu,43qu],[42qu,1qu,43qu])
nand_not(42ou,43ou)
nand_not([42ou,1ou,43ou],42ou)
nand_not(42ou,[42ou,1ou,43ou])
nand_not([42ou,1ou,43ou],[42ou,1ou,43ou])
nand_not(42b,43b)
nand_not([42b,1b,43b],42b)
nand_not(42b,[42b,1b,43b])
nand_not([42b,1b,43b],[42b,1b,43b])
nand_not(42w,43w)
nand_not([42w,1w,43w],42w)
nand_not(42w,[42w,1w,43w])
nand_not([42w,1w,43w],[42w,1w,43w])
nand_not(42l,43l)
nand_not([42l,1l,43l],42l)
nand_not(42l,[42l,1l,43l])
nand_not([42l,1l,43l],[42l,1l,43l])
nand_not(42q,43q)
nand_not([42q,1q,43q],42q)
nand_not(42q,[42q,1q,43q])
nand_not([42q,1q,43q],[42q,1q,43q])
nand_not(42o,43o)
nand_not([42o,1o,43o],42o)
nand_not(42o,[42o,1o,43o])
nand_not([42o,1o,43o],[42o,1o,43o])
nand_not(f_float(42),f_float(43))
nand_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
nand_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
nand_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
nand_not(g_float(42),g_float(43))
nand_not([g_float(42),g_float(1),g_float(43)],g_float(42))
nand_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
nand_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
nand_not(d_float(42),d_float(43))
nand_not([d_float(42),d_float(1),d_float(43)],d_float(42))
nand_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
nand_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
nand_not(f_complex(42,43),f_complex(43,44))
nand_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
nand_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nand_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nand_not(g_complex(42,43),g_complex(43,44))
nand_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
nand_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nand_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nand_not(d_complex(42,43),d_complex(43,44))
nand_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
nand_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nand_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
or(42bu,43bu)
or([42bu,1bu,43bu],42bu)
or(42bu,[42bu,1bu,43bu])
or([42bu,1bu,43bu],[42bu,1bu,43bu])
or(42wu,43wu)
or([42wu,1wu,43wu],42wu)
or(42wu,[42wu,1wu,43wu])
or([42wu,1wu,43wu],[42wu,1wu,43wu])
or(42lu,43lu)
or([42lu,1lu,43lu],42lu)
or(42lu,[42lu,1lu,43lu])
or([42lu,1lu,43lu],[42lu,1lu,43lu])
or(42qu,43qu)
or([42qu,1qu,43qu],42qu)
or(42qu,[42qu,1qu,43qu])
or([42qu,1qu,43qu],[42qu,1qu,43qu])
or(42ou,43ou)
or([42ou,1ou,43ou],42ou)
or(42ou,[42ou,1ou,43ou])
or([42ou,1ou,43ou],[42ou,1ou,43ou])
or(42b,43b)
or([42b,1b,43b],42b)
or(42b,[42b,1b,43b])
or([42b,1b,43b],[42b,1b,43b])
or(42w,43w)
or([42w,1w,43w],42w)
or(42w,[42w,1w,43w])
or([42w,1w,43w],[42w,1w,43w])
or(42l,43l)
or([42l,1l,43l],42l)
or(42l,[42l,1l,43l])
or([42l,1l,43l],[42l,1l,43l])
or(42q,43q)
or([42q,1q,43q],42q)
or(42q,[42q,1q,43q])
or([42q,1q,43q],[42q,1q,43q])
or(42o,43o)
or([42o,1o,43o],42o)
or(42o,[42o,1o,43o])
or([42o,1o,43o],[42o,1o,43o])
or(f_float(42),f_float(43))
or([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
or(f_float(42),[f_float(42),f_float(1),f_float(43)])
or([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
or(g_float(42),g_float(43))
or([g_float(42),g_float(1),g_float(43)],g_float(42))
or(g_float(42),[g_float(42),g_float(1),g_float(43)])
or([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
or(d_float(42),d_float(43))
or([d_float(42),d_float(1),d_float(43)],d_float(42))
or(d_float(42),[d_float(42),d_float(1),d_float(43)])
or([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
or(f_complex(42,43),f_complex(43,44))
or([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
or(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
or([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
or(g_complex(42,43),g_complex(43,44))
or([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
or(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
or([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
or(d_complex(42,43),d_complex(43,44))
or([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
or(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
or([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nor(42bu,43bu)
nor([42bu,1bu,43bu],42bu)
nor(42bu,[42bu,1bu,43bu])
nor([42bu,1bu,43bu],[42bu,1bu,43bu])
nor(42wu,43wu)
nor([42wu,1wu,43wu],42wu)
nor(42wu,[42wu,1wu,43wu])
nor([42wu,1wu,43wu],[42wu,1wu,43wu])
nor(42lu,43lu)
nor([42lu,1lu,43lu],42lu)
nor(42lu,[42lu,1lu,43lu])
nor([42lu,1lu,43lu],[42lu,1lu,43lu])
nor(42qu,43qu)
nor([42qu,1qu,43qu],42qu)
nor(42qu,[42qu,1qu,43qu])
nor([42qu,1qu,43qu],[42qu,1qu,43qu])
nor(42ou,43ou)
nor([42ou,1ou,43ou],42ou)
nor(42ou,[42ou,1ou,43ou])
nor([42ou,1ou,43ou],[42ou,1ou,43ou])
nor(42b,43b)
nor([42b,1b,43b],42b)
nor(42b,[42b,1b,43b])
nor([42b,1b,43b],[42b,1b,43b])
nor(42w,43w)
nor([42w,1w,43w],42w)
nor(42w,[42w,1w,43w])
nor([42w,1w,43w],[42w,1w,43w])
nor(42l,43l)
nor([42l,1l,43l],42l)
nor(42l,[42l,1l,43l])
nor([42l,1l,43l],[42l,1l,43l])
nor(42q,43q)
nor([42q,1q,43q],42q)
nor(42q,[42q,1q,43q])
nor([42q,1q,43q],[42q,1q,43q])
nor(42o,43o)
nor([42o,1o,43o],42o)
nor(42o,[42o,1o,43o])
nor([42o,1o,43o],[42o,1o,43o])
nor(f_float(42),f_float(43))
nor([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
nor(f_float(42),[f_float(42),f_float(1),f_float(43)])
nor([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
nor(g_float(42),g_float(43))
nor([g_float(42),g_float(1),g_float(43)],g_float(42))
nor(g_float(42),[g_float(42),g_float(1),g_float(43)])
nor([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
nor(d_float(42),d_float(43))
nor([d_float(42),d_float(1),d_float(43)],d_float(42))
nor(d_float(42),[d_float(42),d_float(1),d_float(43)])
nor([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
nor(f_complex(42,43),f_complex(43,44))
nor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
nor(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nor(g_complex(42,43),g_complex(43,44))
nor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
nor(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nor(d_complex(42,43),d_complex(43,44))
nor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
nor(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nor_not(42bu,43bu)
nor_not([42bu,1bu,43bu],42bu)
nor_not(42bu,[42bu,1bu,43bu])
nor_not([42bu,1bu,43bu],[42bu,1bu,43bu])
nor_not(42wu,43wu)
nor_not([42wu,1wu,43wu],42wu)
nor_not(42wu,[42wu,1wu,43wu])
nor_not([42wu,1wu,43wu],[42wu,1wu,43wu])
nor_not(42lu,43lu)
nor_not([42lu,1lu,43lu],42lu)
nor_not(42lu,[42lu,1lu,43lu])
nor_not([42lu,1lu,43lu],[42lu,1lu,43lu])
nor_not(42qu,43qu)
nor_not([42qu,1qu,43qu],42qu)
nor_not(42qu,[42qu,1qu,43qu])
nor_not([42qu,1qu,43qu],[42qu,1qu,43qu])
nor_not(42ou,43ou)
nor_not([42ou,1ou,43ou],42ou)
nor_not(42ou,[42ou,1ou,43ou])
nor_not([42ou,1ou,43ou],[42ou,1ou,43ou])
nor_not(42b,43b)
nor_not([42b,1b,43b],42b)
nor_not(42b,[42b,1b,43b])
nor_not([42b,1b,43b],[42b,1b,43b])
nor_not(42w,43w)
nor_not([42w,1w,43w],42w)
nor_not(42w,[42w,1w,43w])
nor_not([42w,1w,43w],[42w,1w,43w])
nor_not(42l,43l)
nor_not([42l,1l,43l],42l)
nor_not(42l,[42l,1l,43l])
nor_not([42l,1l,43l],[42l,1l,43l])
nor_not(42q,43q)
nor_not([42q,1q,43q],42q)
nor_not(42q,[42q,1q,43q])
nor_not([42q,1q,43q],[42q,1q,43q])
nor_not(42o,43o)
nor_not([42o,1o,43o],42o)
nor_not(42o,[42o,1o,43o])
nor_not([42o,1o,43o],[42o,1o,43o])
nor_not(f_float(42),f_float(43))
nor_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
nor_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
nor_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
nor_not(g_float(42),g_float(43))
nor_not([g_float(42),g_float(1),g_float(43)],g_float(42))
nor_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
nor_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
nor_not(d_float(42),d_float(43))
nor_not([d_float(42),d_float(1),d_float(43)],d_float(42))
nor_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
nor_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
nor_not(f_complex(42,43),f_complex(43,44))
nor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
nor_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
nor_not(g_complex(42,43),g_complex(43,44))
nor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
nor_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
nor_not(d_complex(42,43),d_complex(43,44))
nor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
nor_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
nor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
or_not(42bu,43bu)
or_not([42bu,1bu,43bu],42bu)
or_not(42bu,[42bu,1bu,43bu])
or_not([42bu,1bu,43bu],[42bu,1bu,43bu])
or_not(42wu,43wu)
or_not([42wu,1wu,43wu],42wu)
or_not(42wu,[42wu,1wu,43wu])
or_not([42wu,1wu,43wu],[42wu,1wu,43wu])
or_not(42lu,43lu)
or_not([42lu,1lu,43lu],42lu)
or_not(42lu,[42lu,1lu,43lu])
or_not([42lu,1lu,43lu],[42lu,1lu,43lu])
or_not(42qu,43qu)
or_not([42qu,1qu,43qu],42qu)
or_not(42qu,[42qu,1qu,43qu])
or_not([42qu,1qu,43qu],[42qu,1qu,43qu])
or_not(42ou,43ou)
or_not([42ou,1ou,43ou],42ou)
or_not(42ou,[42ou,1ou,43ou])
or_not([42ou,1ou,43ou],[42ou,1ou,43ou])
or_not(42b,43b)
or_not([42b,1b,43b],42b)
or_not(42b,[42b,1b,43b])
or_not([42b,1b,43b],[42b,1b,43b])
or_not(42w,43w)
or_not([42w,1w,43w],42w)
or_not(42w,[42w,1w,43w])
or_not([42w,1w,43w],[42w,1w,43w])
or_not(42l,43l)
or_not([42l,1l,43l],42l)
or_not(42l,[42l,1l,43l])
or_not([42l,1l,43l],[42l,1l,43l])
or_not(42q,43q)
or_not([42q,1q,43q],42q)
or_not(42q,[42q,1q,43q])
or_not([42q,1q,43q],[42q,1q,43q])
or_not(42o,43o)
or_not([42o,1o,43o],42o)
or_not(42o,[42o,1o,43o])
or_not([42o,1o,43o],[42o,1o,43o])
or_not(f_float(42),f_float(43))
or_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
or_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
or_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
or_not(g_float(42),g_float(43))
or_not([g_float(42),g_float(1),g_float(43)],g_float(42))
or_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
or_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
or_not(d_float(42),d_float(43))
or_not([d_float(42),d_float(1),d_float(43)],d_float(42))
or_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
or_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
or_not(f_complex(42,43),f_complex(43,44))
or_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
or_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
or_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
or_not(g_complex(42,43),g_complex(43,44))
or_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
or_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
or_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
or_not(d_complex(42,43),d_complex(43,44))
or_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
or_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
or_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
neqv(42bu,43bu)
neqv([42bu,1bu,43bu],42bu)
neqv(42bu,[42bu,1bu,43bu])
neqv([42bu,1bu,43bu],[42bu,1bu,43bu])
neqv(42wu,43wu)
neqv([42wu,1wu,43wu],42wu)
neqv(42wu,[42wu,1wu,43wu])
neqv([42wu,1wu,43wu],[42wu,1wu,43wu])
neqv(42lu,43lu)
neqv([42lu,1lu,43lu],42lu)
neqv(42lu,[42lu,1lu,43lu])
neqv([42lu,1lu,43lu],[42lu,1lu,43lu])
neqv(42qu,43qu)
neqv([42qu,1qu,43qu],42qu)
neqv(42qu,[42qu,1qu,43qu])
neqv([42qu,1qu,43qu],[42qu,1qu,43qu])
neqv(42ou,43ou)
neqv([42ou,1ou,43ou],42ou)
neqv(42ou,[42ou,1ou,43ou])
neqv([42ou,1ou,43ou],[42ou,1ou,43ou])
neqv(42b,43b)
neqv([42b,1b,43b],42b)
neqv(42b,[42b,1b,43b])
neqv([42b,1b,43b],[42b,1b,43b])
neqv(42w,43w)
neqv([42w,1w,43w],42w)
neqv(42w,[42w,1w,43w])
neqv([42w,1w,43w],[42w,1w,43w])
neqv(42l,43l)
neqv([42l,1l,43l],42l)
neqv(42l,[42l,1l,43l])
neqv([42l,1l,43l],[42l,1l,43l])
neqv(42q,43q)
neqv([42q,1q,43q],42q)
neqv(42q,[42q,1q,43q])
neqv([42q,1q,43q],[42q,1q,43q])
neqv(42o,43o)
neqv([42o,1o,43o],42o)
neqv(42o,[42o,1o,43o])
neqv([42o,1o,43o],[42o,1o,43o])
neqv(f_float(42),f_float(43))
neqv([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
neqv(f_float(42),[f_float(42),f_float(1),f_float(43)])
neqv([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
neqv(g_float(42),g_float(43))
neqv([g_float(42),g_float(1),g_float(43)],g_float(42))
neqv(g_float(42),[g_float(42),g_float(1),g_float(43)])
neqv([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
neqv(d_float(42),d_float(43))
neqv([d_float(42),d_float(1),d_float(43)],d_float(42))
neqv(d_float(42),[d_float(42),d_float(1),d_float(43)])
neqv([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
neqv(f_complex(42,43),f_complex(43,44))
neqv([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
neqv(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
neqv([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
neqv(g_complex(42,43),g_complex(43,44))
neqv([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
neqv(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
neqv([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
neqv(d_complex(42,43),d_complex(43,44))
neqv([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
neqv(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
neqv([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
eqv(42bu,43bu)
eqv([42bu,1bu,43bu],42bu)
eqv(42bu,[42bu,1bu,43bu])
eqv([42bu,1bu,43bu],[42bu,1bu,43bu])
eqv(42wu,43wu)
eqv([42wu,1wu,43wu],42wu)
eqv(42wu,[42wu,1wu,43wu])
eqv([42wu,1wu,43wu],[42wu,1wu,43wu])
eqv(42lu,43lu)
eqv([42lu,1lu,43lu],42lu)
eqv(42lu,[42lu,1lu,43lu])
eqv([42lu,1lu,43lu],[42lu,1lu,43lu])
eqv(42qu,43qu)
eqv([42qu,1qu,43qu],42qu)
eqv(42qu,[42qu,1qu,43qu])
eqv([42qu,1qu,43qu],[42qu,1qu,43qu])
eqv(42ou,43ou)
eqv([42ou,1ou,43ou],42ou)
eqv(42ou,[42ou,1ou,43ou])
eqv([42ou,1ou,43ou],[42ou,1ou,43ou])
eqv(42b,43b)
eqv([42b,1b,43b],42b)
eqv(42b,[42b,1b,43b])
eqv([42b,1b,43b],[42b,1b,43b])
eqv(42w,43w)
eqv([42w,1w,43w],42w)
eqv(42w,[42w,1w,43w])
eqv([42w,1w,43w],[42w,1w,43w])
eqv(42l,43l)
eqv([42l,1l,43l],42l)
eqv(42l,[42l,1l,43l])
eqv([42l,1l,43l],[42l,1l,43l])
eqv(42q,43q)
eqv([42q,1q,43q],42q)
eqv(42q,[42q,1q,43q])
eqv([42q,1q,43q],[42q,1q,43q])
eqv(42o,43o)
eqv([42o,1o,43o],42o)
eqv(42o,[42o,1o,43o])
eqv([42o,1o,43o],[42o,1o,43o])
eqv(f_float(42),f_float(43))
eqv([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
eqv(f_float(42),[f_float(42),f_float(1),f_float(43)])
eqv([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
eqv(g_float(42),g_float(43))
eqv([g_float(42),g_float(1),g_float(43)],g_float(42))
eqv(g_float(42),[g_float(42),g_float(1),g_float(43)])
eqv([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
eqv(d_float(42),d_float(43))
eqv([d_float(42),d_float(1),d_float(43)],d_float(42))
eqv(d_float(42),[d_float(42),d_float(1),d_float(43)])
eqv([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
eqv(f_complex(42,43),f_complex(43,44))
eqv([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
eqv(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
eqv([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
eqv(g_complex(42,43),g_complex(43,44))
eqv([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
eqv(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
eqv([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
eqv(d_complex(42,43),d_complex(43,44))
eqv([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
eqv(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
eqv([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
#
# Functions implemented in TdiArray.c
#
array([5,2],0)*0
ramp([5,2])
#random([5,2])
#random([5,2],0.0G1)
#random([5,2],0.0D1)
#random([5,2],f_complex(0.0,0.0))
#random([5,2],g_complex(0.0,0.0))
#random([5,2],d_complex(0.0,0.0))
zero([5,2],0.0)
#
# Functions implemented in TdiBound.c
#
_array=set_range(-5:4,5,zero(50))
_signal=build_signal(_array,*,-9:0,1:5)
lbound(_array)
lbound(_signal)
shape(_array)
shape(_signal)
size(_array)
size(_signal)
ubound(_array)
ubound(_signal)
elbound(_array)
elbound(_signal)
eubound(_array)
eubound(_signal)
eshape(_array)
eshape(_signal)
esize(_array)
esize(_signal)
#
# Function implemented in TdiBuild.c
#
Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF")
#Build_condition(
Build_conglom("MIT$DEVICES","A12",*,*)
#Build_dependency(
Build_dim(build_window(-1,3,10.),build_slope(3.))
Build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT")
#Build_Event(
Build_Function(Builtin_opcode('SIN'),30)
Build_Method(10.,"INIT",*,42.)
#Build_Param(
#Build_Path(
Build_Procedure(10.,"TCL","TYPE FOO")
#Build_Program(
Build_Range(1,10,1)
Build_Routine(8,"TdiShr","TdiGetLong",xd(42),ref(_a))
Build_Signal(1:10*$VALUE,1:10,0:9)
Build_Slope(3.,1,30)
Build_With_units(42.,"Units")
_A=-1
if_error(Build_Call(8,"TdiShr","TdiGetLong",xd(42),ref(_a)),\
         Build_Call(8,"TdiShr","TDI$GET_LONG",xd(42),ref(_a)),-999)
_A
Build_with_error(42.,43.)
Make_action(make_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),make_method("TIMEOUT","METHOD","OBJECT"),"TWF")
#Make_condition(
Make_conglom("MIT$DEVICES","A12",*,*)
#Make_dependency(
Make_dim(make_window(-1,3,10.),make_slope(3.))
Make_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT")
#Make_Event(
Make_Function(Builtin_opcode('SIN'),30)
Make_Method(10.,"INIT",*,42.)
#Make_Param(
#Make_Path(
Make_Procedure(10.,"TCL","TYPE FOO")
#Make_Program(
Make_Range(1,10,1)
decompile(Make_Routine(8,"TdiShr","TdiGetLong",xd(42),ref(_a)))
Make_Signal(1:10*$VALUE,1:10,0:9)
Make_Slope(3.,1,30)
Make_With_units(42.,"Units")
decompile(Make_Call(8,"TdiShr","TdiGetLong",xd(42),ref(_a)))
Make_with_error(42.,43.)
#
# Functions implemented in TdiChar.c
#
ADJUSTL("    THIS IS A TEST    ")
ADJUSTR("    THIS IS A TEST    ")
BUILTIN_OPCODE("SIN")
CHAR(60)
ACHAR(60)
"THIS"//" IS "//" A "//"TEST"
ELEMENT(1," ","THIS IS A TEST")
EXTRACT(5,10,"THIS IS A TEST")
ICHAR("A")
IACHAR("A")
INDEX("THIS IS A TEST"," IS")
LEN_TRIM("       THIS IS A TEST           ")
REPEAT("FOO",5)
SCAN("FORTRAN","TR")
STRING_OPCODE("SIN")
TRANSLATE("THIS IS A TEST","TSI","123")
UPCASE("This is a test")
VERIFY("ABBA","AB")
VERIFY("ABBA","A")
VERIFY("ABBA","A",$TRUE)
#
# Constants implemented in TdiConstant.c
#
$2PI
$A0
$Alpha
$Amu
$Atm
$C
$Cal
$Degree
$Epsilon0
$Ev
$False
$Faraday
$G
$Gas
$Gn
$H
$Hbar
$I
$K
$Me
$Missing
$Mp
$Mu0
$N0
$Na
$P0
$Pi
$Qe
$Re
$Roprand
$Rydberg
$T0
$Torr
$True
#
#Functions implemented in TdiConvert.c
#
byte_unsigned(42ub)
byte_unsigned(42uw)
byte_unsigned(42ul)
byte_unsigned(42uq)
byte_unsigned(42uo)
byte_unsigned(42b)
byte_unsigned(42w)
byte_unsigned(42l)
byte_unsigned(42q)
byte_unsigned(42o)
byte_unsigned(42F0)
byte_unsigned(42V0)
byte_unsigned(42G0)
byte_unsigned(42S0)
byte_unsigned(42T0)
word_unsigned(42ub)
word_unsigned(42uw)
word_unsigned(42ul)
word_unsigned(42uq)
word_unsigned(42uo)
word_unsigned(42b)
word_unsigned(42w)
word_unsigned(42l)
word_unsigned(42q)
word_unsigned(42o)
word_unsigned(42F0)
word_unsigned(42V0)
word_unsigned(42G0)
word_unsigned(42S0)
word_unsigned(42T0)
long_unsigned(42ub)
long_unsigned(42uw)
long_unsigned(42ul)
long_unsigned(42uq)
long_unsigned(42uo)
int_unsigned(42b)
int_unsigned(42w)
int_unsigned(42l)
int_unsigned(42q)
int_unsigned(42o)
int_unsigned(42F0)
int_unsigned(42V0)
int_unsigned(42G0)
int_unsigned(42S0)
int_unsigned(42T0)
int_unsigned(42ub)
int_unsigned(42uw)
int_unsigned(42ul)
int_unsigned(42uq)
int_unsigned(42uo)
quadword_unsigned(42ub)
quadword_unsigned(42uw)
quadword_unsigned(42ul)
quadword_unsigned(42uq)
quadword_unsigned(42uo)
quadword_unsigned(42b)
quadword_unsigned(42w)
quadword_unsigned(42l)
quadword_unsigned(42q)
quadword_unsigned(42o)
quadword_unsigned(42F0)
quadword_unsigned(42V0)
quadword_unsigned(42G0)
quadword_unsigned(42S0)
quadword_unsigned(42T0)
octaword_unsigned(42ub)
octaword_unsigned(42uw)
octaword_unsigned(42ul)
octaword_unsigned(42uq)
octaword_unsigned(42uo)
octaword_unsigned(42b)
octaword_unsigned(42w)
octaword_unsigned(42l)
octaword_unsigned(42q)
octaword_unsigned(42o)
octaword_unsigned(42F0)
octaword_unsigned(42V0)
octaword_unsigned(42G0)
octaword_unsigned(42S0)
octaword_unsigned(42T0)
byte(42ub)
byte(42uw)
byte(42ul)
byte(42uq)
byte(42uo)
byte(42b)
byte(42w)
byte(42l)
byte(42q)
byte(42o)
byte(42f0)
byte(42V0)
byte(42G0)
byte(42S0)
byte(42T0)
word(42ub)
word(42uw)
word(42ul)
word(42uq)
word(42uo)
word(42b)
word(42w)
word(42l)
word(42q)
word(42o)
word(42F0)
word(42V0)
word(42G0)
word(42S0)
word(42T0)
int(42ub)
int(42uw)
int(42ul)
int(42uq)
int(42uo)
int(42b)
int(42w)
int(42l)
int(42q)
int(42o)
int(42F0)
int(42V0)
int(42G0)
int(42S0)
int(42T0)
int(42ub)
int(42uw)
int(42ul)
int(42uq)
int(42uo)
int(42b)
int(42w)
int(42l)
int(42q)
int(42o)
int(42F0)
int(42V0)
int(42G0)
int(42S0)
int(42T0)
quadword(42ub)
quadword(42uw)
quadword(42ul)
quadword(42uq)
quadword(42uo)
quadword(42b)
quadword(42w)
quadword(42l)
quadword(42q)
quadword(42o)
quadword(42F0)
quadword(42V0)
quadword(42G0)
quadword(42S0)
quadword(42T0)
octaword(42ub)
octaword(42uw)
octaword(42ul)
octaword(42uq)
octaword(42uo)
octaword(42b)
octaword(42w)
octaword(42l)
octaword(42q)
octaword(42o)
octaword(42F0)
octaword(42V0)
octaword(42G0)
octaword(42S0)
octaword(42T0)
f_float(42ub)
f_float(42uw)
f_float(42ul)
f_float(42uq)
f_float(42uo)
f_float(42b)
f_float(42w)
f_float(42l)
f_float(42q)
f_float(42o)
f_float(42F0)
f_float(42V0)
f_float(42G0)
f_float(42S0)
f_float(42T0)
d_float(42ub)
d_float(42uw)
d_float(42ul)
d_float(42uq)
d_float(42uo)
d_float(42b)
d_float(42w)
d_float(42l)
d_float(42q)
d_float(42o)
d_float(42F0)
d_float(42V0)
d_float(42G0)
d_float(42S0)
d_float(42T0)
g_float(42ub)
g_float(42uw)
g_float(42ul)
g_float(42uq)
g_float(42uo)
g_float(42b)
g_float(42w)
g_float(42l)
g_float(42q)
g_float(42o)
g_float(42F0)
g_float(42V0)
g_float(42G0)
g_float(42S0)
g_float(42T0)
f_complex(42ub)
f_complex(42uw)
f_complex(42ul)
f_complex(42uq)
f_complex(42uo)
f_complex(42b)
f_complex(42w)
f_complex(42l)
f_complex(42q)
f_complex(42o)
f_complex(42F0)
f_complex(42V0)
f_complex(42G0)
f_complex(42S0)
f_complex(42T0)
d_complex(42ub)
d_complex(42uw)
d_complex(42ul)
d_complex(42uq)
d_complex(42uo)
d_complex(42b)
d_complex(42w)
d_complex(42l)
d_complex(42q)
d_complex(42o)
d_complex(42F0)
d_complex(42V0)
d_complex(42G0)
d_complex(42S0)
d_complex(42T0)
g_complex(42ub)
g_complex(42uw)
g_complex(42ul)
g_complex(42uq)
g_complex(42uo)
g_complex(42b)
g_complex(42w)
g_complex(42l)
g_complex(42q)
g_complex(42o)
g_complex(42F0)
g_complex(42V0)
g_complex(42G0)
g_complex(42S0)
g_complex(42T0)
#
# Functions implemented in TdiCull.c
#
CULL(1:5,,0:7)
CULL(BUILD_DIM(BUILD_WINDOW(2,5,1.1),BUILD_RANGE(,,3)),0,5:8)
EXTEND(1:5,,0:7)
EXTEND(BUILD_DIM(BUILD_WINDOW(2,5,1.1),BUILD_RANGE(,,3)),0,5:8)
#
# Functions implemented in TdiDim.c
#
IBSET(0ub,2)
IBSET(0uw,2)
IBSET(0ul,2)
IBSET(0uq,2)
IBSET(0uo,2)
IBSET(0b,2)
IBSET(0w,2)
IBSET(0l,2)
IBSET(0q,2)
IBSET(0o,2)
IBSET(1f0,15)
IBSET(1v0,15)
IBSET(1G0,15)
IBSET(1s0,15)
IBSET(1t0,15)
IBCLR(0ub,2)
IBCLR(0uw,2)
IBCLR(0ul,2)
IBCLR(0uq,2)
IBCLR(0uo,2)
IBCLR(0b,2)
IBCLR(0w,2)
IBCLR(0l,2)
IBCLR(0q,2)
IBCLR(0o,2)
IBCLR(-1f0,15)
IBCLR(-1v0,15)
IBCLR(-1G0,15)
IBCLR(-1s0,15)
IBCLR(-1t0,15)
BTEST(0ub,2)
BTEST(0uw,2)
BTEST(0ul,2)
BTEST(0uq,2)
BTEST(0uo,2)
BTEST(0b,2)
BTEST(0w,2)
BTEST(0l,2)
BTEST(0q,2)
BTEST(0o,2)
BTEST(0f0,2)
BTEST(0v0,2)
BTEST(0G0,2)
BTEST(0s0,2)
BTEST(0t0,2)
Cmplx(42F0,43F0)
Cmplx(42G0,43G0)
Cmplx(42V0,43v0)
Cmplx(42S0,43S0)
Cmplx(42T0,43T0)
MAX(1ub,2ub)
MAX(1uw,2uw)
MAX(1ul,2ul)
MAX(1uq,2uq)
MAX(1uo,2uo)
MAX(1b,2b)
MAX(1w,2w)
MAX(1l,2l)
MAX(1q,2q)
MAX(1o,2o)
MAX(1f0,2f0)
MAX(1v0,2v0)
MAX(1G0,2G0)
MAX(1s0,2s0)
MAX(1t0,2t0)
MIN(1ub,2ub)
MIN(1uw,2uw)
MIN(1ul,2ul)
MIN(1uq,2uq)
MIN(1uo,2uo)
MIN(1b,2b)
MIN(1w,2w)
MIN(1l,2l)
MIN(1q,2q)
MIN(1o,2o)
MIN(1f0,2f0)
MIN(1v0,2v0)
MIN(1G0,2G0)
MIN(1s0,2s0)
MIN(1t0,2t0)
DIM(2ub,1ub)
DIM(2uw,1uw)
DIM(2ul,1ul)
DIM(2uq,1uq)
DIM(2uo,1uo)
DIM(2b,1b)
DIM(2w,1w)
DIM(2l,1l)
DIM(2q,1q)
DIM(2o,1o)
DIM(2f0,1f0)
DIM(2v0,1v0)
DIM(2G0,1G0)
DIM(2s0,1s0)
DIM(2t0,1t0)
DIM(1ub,2ub)
DIM(1uw,2uw)
DIM(1ul,2ul)
DIM(1uq,2uq)
DIM(1uo,2uo)
DIM(1b,2b)
DIM(1w,2w)
DIM(1l,2l)
DIM(1q,2q)
DIM(1o,2o)
DIM(1f0,2f0)
DIM(1v0,2v0)
DIM(1G0,2G0)
DIM(1s0,2s0)
DIM(1t0,2t0)
ISHFT(1ub,2ub)
ISHFT(1uw,2uw)
ISHFT(1ul,2ul)
#ISHFT(1uq,2uq)
#ISHFT(1uo,2uo)
ISHFT(1b,2b)
ISHFT(1w,2w)
ISHFT(1l,2l)
#ISHFT(1q,2q)
#ISHFT(1o,2o)
#ISHFT(1E0,2E0)
#ISHFT(1D0,2D0)
#ISHFT(1G0,2G0)
SHIFT_RIGHT(1ub,2ub)
SHIFT_RIGHT(1uw,2uw)
SHIFT_RIGHT(1ul,2ul)
#SHIFT_RIGHT(1uq,2uq)
#SHIFT_RIGHT(1uo,2uo)
SHIFT_RIGHT(1b,2b)
SHIFT_RIGHT(1w,2w)
SHIFT_RIGHT(1l,2l)
#SHIFT_RIGHT(1q,2q)
#SHIFT_RIGHT(1o,2o)
#SHIFT_RIGHT(1E0,2E0)
#SHIFT_RIGHT(1D0,2D0)
#SHIFT_RIGHT(1G0,2G0)
SHIFT_LEFT(1ub,2ub)
SHIFT_LEFT(1uw,2uw)
SHIFT_LEFT(1ul,2ul)
#SHIFT_LEFT(1uq,2uq)
#SHIFT_LEFT(1uo,2uo)
SHIFT_LEFT(1b,2b)
SHIFT_LEFT(1w,2w)
SHIFT_LEFT(1l,2l)
#SHIFT_LEFT(1q,2q)
#SHIFT_LEFT(1o,2o)
#SHIFT_LEFT(1E0,2E0)
#SHIFT_LEFT(1D0,2D0)
#SHIFT_LEFT(1G0,2G0)
#
# Functions implemented in TdiDivide.c
#
DIVIDE(2ub,1ub)
DIVIDE(2uw,1uw)
DIVIDE(2ul,1ul)
DIVIDE(2uq,1uq)
#DIVIDE(2uo,1uo)
DIVIDE(2b,1b)
DIVIDE(2w,1w)
DIVIDE(2l,1l)
DIVIDE(2q,1q)
#DIVIDE(2o,1o)
DIVIDE(2f0,1f0)
DIVIDE(2v0,1v0)
DIVIDE(2G0,1G0)
DIVIDE(2s0,1s0)
DIVIDE(2t0,1t0)
DIVIDE(F_COMPLEX(2.0,1.0),F_COMPLEX(1.0,1.0))
DIVIDE(D_COMPLEX(2.0,1.0),D_COMPLEX(1.0,1.0))
DIVIDE(G_COMPLEX(2.0,1.0),G_COMPLEX(1.0,1.0))
#
# Functions implemented in TdiDtypeRange.c
#
dtype_range([1,10],[5,15],[1,.5])
#
# Functions implemented in TdiEq.c
#
eq(2ub,1ub)
eq(2ub,2ub)
eq(2uw,1uw)
eq(2uw,2uw)
eq(2ul,1ul)
eq(2ul,2ul)
eq(2uq,1uq)
eq(2uq,2uq)
eq(2uo,1uo)
eq(2uo,2uo)
eq(2f0,1f0)
eq(2f0,2f0)
eq(2g0,1g0)
eq(2g0,2g0)
eq(2v0,1v0)
eq(2v0,2v0)
eq(2s0,1s0)
eq(2s0,2s0)
eq(2t0,1t0)
eq(2t0,2t0)
eq("OK","OK")
eq("OK","OKNOT")
ge(2ub,1ub)
ge(2ub,2ub)
ge(2uw,1uw)
ge(2uw,2uw)
ge(2ul,1ul)
ge(2ul,2ul)
ge(2uq,1uq)
ge(2uq,2uq)
ge(2uo,1uo)
ge(2uo,2uo)
ge(2f0,1f0)
ge(2f0,2f0)
ge(2g0,1g0)
ge(2g0,2g0)
ge(2v0,1v0)
ge(2v0,2v0)
ge(2s0,1s0)
ge(2s0,2s0)
ge(2t0,1t0)
ge(2t0,2t0)
ge("OK","OK")
ge("OK","OKNOT")
gt(2ub,1ub)
gt(2ub,2ub)
gt(2uw,1uw)
gt(2uw,2uw)
gt(2ul,1ul)
gt(2ul,2ul)
gt(2uq,1uq)
gt(2uq,2uq)
gt(2uo,1uo)
gt(2uo,2uo)
gt(2f0,1f0)
gt(2f0,2f0)
gt(2g0,1g0)
gt(2g0,2g0)
gt(2v0,1v0)
gt(2v0,2v0)
gt(2s0,1s0)
gt(2s0,2s0)
gt(2t0,1t0)
gt(2t0,2t0)
gt("OK","OK")
gt("OK","OKNOT")
le(2ub,1ub)
le(2ub,2ub)
le(2uw,1uw)
le(2uw,2uw)
le(2ul,1ul)
le(2ul,2ul)
le(2uq,1uq)
le(2uq,2uq)
le(2uo,1uo)
le(2uo,2uo)
le(2f0,1f0)
le(2f0,2f0)
le(2g0,1g0)
le(2g0,2g0)
le(2v0,1v0)
le(2v0,2v0)
le(2s0,1s0)
le(2s0,2s0)
le(2t0,1t0)
le(2t0,2t0)
le("OK","OK")
le("OK","OKNOT")
lge("ONE","TWO")
lge("TWO","ONE")
lgt("ONE","TWO")
lgt("TWO","ONE")
lle("ONE","TWO")
lle("TWO","ONE")
llt("ONE","TWO")
llt("TWO","ONE")
lt(2ub,1ub)
lt(2ub,2ub)
lt(2uw,1uw)
lt(2uw,2uw)
lt(2ul,1ul)
lt(2ul,2ul)
lt(2uq,1uq)
lt(2uq,2uq)
lt(2uo,1uo)
lt(2uo,2uo)
lt(2f0,1f0)
lt(2f0,2f0)
lt(2g0,1g0)
lt(2g0,2g0)
lt(2v0,1v0)
lt(2v0,2v0)
lt(2s0,1s0)
lt(2s0,2s0)
lt(2t0,1t0)
lt(2t0,2t0)
lt("OK","OK")
lt("OK","OKNOT")
ne(2ub,1ub)
ne(2ub,2ub)
ne(2uw,1uw)
ne(2uw,2uw)
ne(2ul,1ul)
ne(2ul,2ul)
ne(2uq,1uq)
ne(2uq,2uq)
ne(2uo,1uo)
ne(2uo,2uo)
ne(2f0,1f0)
ne(2f0,2f0)
ne(2g0,1g0)
ne(2g0,2g0)
ne(2v0,1v0)
ne(2v0,2v0)
ne(2s0,1s0)
ne(2s0,2s0)
ne(2t0,1t0)
ne(2t0,2t0)
ne("OK","OK")
ne("OK","OKNOT")
#
# Functions implemented in TdiExponent.c
#
exponent(100F0)
exponent(100V0)
exponent(100G0)
exponent(100S0)
exponent(100T0)
finite($ROPRAND)
fix_roprand([$ROPRAND,1.,$ROPRAND],42.)
fraction(100F0)
fraction(100V0)
fraction(100G0)
fraction(100S0)
fraction(100T0)
rrspacing(100F0)
rrspacing(100V0)
rrspacing(100G0)
rrspacing(100S0)
rrspacing(100T0)
scale(100F0,2)
scale(100V0,2)
scale(100G0,2)
scale(100S0,2)
scale(100T0,2)
set_exponent(100F0,2)
set_exponent(100V0,2)
set_exponent(100G0,2)
set_exponent(100S0,2)
set_exponent(100T0,2)
spacing(100F0)
spacing(100V0)
spacing(100G0)
spacing(100S0)
spacing(100T0)
#
# Functions implemented in TdiIand.c
#
iand(42bu,43bu)
iand([42bu,1bu,43bu],42bu)
iand(42bu,[42bu,1bu,43bu])
iand([42bu,1bu,43bu],[42bu,1bu,43bu])
iand(42wu,43wu)
iand([42wu,1wu,43wu],42wu)
iand(42wu,[42wu,1wu,43wu])
iand([42wu,1wu,43wu],[42wu,1wu,43wu])
iand(42lu,43lu)
iand([42lu,1lu,43lu],42lu)
iand(42lu,[42lu,1lu,43lu])
iand([42lu,1lu,43lu],[42lu,1lu,43lu])
iand(42qu,43qu)
iand([42qu,1qu,43qu],42qu)
iand(42qu,[42qu,1qu,43qu])
iand([42qu,1qu,43qu],[42qu,1qu,43qu])
iand(42ou,43ou)
iand([42ou,1ou,43ou],42ou)
iand(42ou,[42ou,1ou,43ou])
iand([42ou,1ou,43ou],[42ou,1ou,43ou])
iand(42b,43b)
iand([42b,1b,43b],42b)
iand(42b,[42b,1b,43b])
iand([42b,1b,43b],[42b,1b,43b])
iand(42w,43w)
iand([42w,1w,43w],42w)
iand(42w,[42w,1w,43w])
iand([42w,1w,43w],[42w,1w,43w])
iand(42l,43l)
iand([42l,1l,43l],42l)
iand(42l,[42l,1l,43l])
iand([42l,1l,43l],[42l,1l,43l])
iand(42q,43q)
iand([42q,1q,43q],42q)
iand(42q,[42q,1q,43q])
iand([42q,1q,43q],[42q,1q,43q])
iand(42o,43o)
iand([42o,1o,43o],42o)
iand(42o,[42o,1o,43o])
iand([42o,1o,43o],[42o,1o,43o])
iand(f_float(42),f_float(43))
iand([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
iand(f_float(42),[f_float(42),f_float(1),f_float(43)])
iand([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
iand(g_float(42),g_float(43))
iand([g_float(42),g_float(1),g_float(43)],g_float(42))
iand(g_float(42),[g_float(42),g_float(1),g_float(43)])
iand([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
iand(d_float(42),d_float(43))
iand([d_float(42),d_float(1),d_float(43)],d_float(42))
iand(d_float(42),[d_float(42),d_float(1),d_float(43)])
iand([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
iand(f_complex(42,43),f_complex(43,44))
iand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
iand(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
iand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
iand(g_complex(42,43),g_complex(43,44))
iand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
iand(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
iand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
iand(d_complex(42,43),d_complex(43,44))
iand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
iand(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
iand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
iand_not(42bu,43bu)
iand_not([42bu,1bu,43bu],42bu)
iand_not(42bu,[42bu,1bu,43bu])
iand_not([42bu,1bu,43bu],[42bu,1bu,43bu])
iand_not(42wu,43wu)
iand_not([42wu,1wu,43wu],42wu)
iand_not(42wu,[42wu,1wu,43wu])
iand_not([42wu,1wu,43wu],[42wu,1wu,43wu])
iand_not(42lu,43lu)
iand_not([42lu,1lu,43lu],42lu)
iand_not(42lu,[42lu,1lu,43lu])
iand_not([42lu,1lu,43lu],[42lu,1lu,43lu])
iand_not(42qu,43qu)
iand_not([42qu,1qu,43qu],42qu)
iand_not(42qu,[42qu,1qu,43qu])
iand_not([42qu,1qu,43qu],[42qu,1qu,43qu])
iand_not(42ou,43ou)
iand_not([42ou,1ou,43ou],42ou)
iand_not(42ou,[42ou,1ou,43ou])
iand_not([42ou,1ou,43ou],[42ou,1ou,43ou])
iand_not(42b,43b)
iand_not([42b,1b,43b],42b)
iand_not(42b,[42b,1b,43b])
iand_not([42b,1b,43b],[42b,1b,43b])
iand_not(42w,43w)
iand_not([42w,1w,43w],42w)
iand_not(42w,[42w,1w,43w])
iand_not([42w,1w,43w],[42w,1w,43w])
iand_not(42l,43l)
iand_not([42l,1l,43l],42l)
iand_not(42l,[42l,1l,43l])
iand_not([42l,1l,43l],[42l,1l,43l])
iand_not(42q,43q)
iand_not([42q,1q,43q],42q)
iand_not(42q,[42q,1q,43q])
iand_not([42q,1q,43q],[42q,1q,43q])
iand_not(42o,43o)
iand_not([42o,1o,43o],42o)
iand_not(42o,[42o,1o,43o])
iand_not([42o,1o,43o],[42o,1o,43o])
iand_not(f_float(42),f_float(43))
iand_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
iand_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
iand_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
iand_not(g_float(42),g_float(43))
iand_not([g_float(42),g_float(1),g_float(43)],g_float(42))
iand_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
iand_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
iand_not(d_float(42),d_float(43))
iand_not([d_float(42),d_float(1),d_float(43)],d_float(42))
iand_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
iand_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
iand_not(f_complex(42,43),f_complex(43,44))
iand_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
iand_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
iand_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
iand_not(g_complex(42,43),g_complex(43,44))
iand_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
iand_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
iand_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
iand_not(d_complex(42,43),d_complex(43,44))
iand_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
iand_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
iand_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inand(42bu,43bu)
inand([42bu,1bu,43bu],42bu)
inand(42bu,[42bu,1bu,43bu])
inand([42bu,1bu,43bu],[42bu,1bu,43bu])
inand(42wu,43wu)
inand([42wu,1wu,43wu],42wu)
inand(42wu,[42wu,1wu,43wu])
inand([42wu,1wu,43wu],[42wu,1wu,43wu])
inand(42lu,43lu)
inand([42lu,1lu,43lu],42lu)
inand(42lu,[42lu,1lu,43lu])
inand([42lu,1lu,43lu],[42lu,1lu,43lu])
inand(42qu,43qu)
inand([42qu,1qu,43qu],42qu)
inand(42qu,[42qu,1qu,43qu])
inand([42qu,1qu,43qu],[42qu,1qu,43qu])
inand(42ou,43ou)
inand([42ou,1ou,43ou],42ou)
inand(42ou,[42ou,1ou,43ou])
inand([42ou,1ou,43ou],[42ou,1ou,43ou])
inand(42b,43b)
inand([42b,1b,43b],42b)
inand(42b,[42b,1b,43b])
inand([42b,1b,43b],[42b,1b,43b])
inand(42w,43w)
inand([42w,1w,43w],42w)
inand(42w,[42w,1w,43w])
inand([42w,1w,43w],[42w,1w,43w])
inand(42l,43l)
inand([42l,1l,43l],42l)
inand(42l,[42l,1l,43l])
inand([42l,1l,43l],[42l,1l,43l])
inand(42q,43q)
inand([42q,1q,43q],42q)
inand(42q,[42q,1q,43q])
inand([42q,1q,43q],[42q,1q,43q])
inand(42o,43o)
inand([42o,1o,43o],42o)
inand(42o,[42o,1o,43o])
inand([42o,1o,43o],[42o,1o,43o])
inand(f_float(42),f_float(43))
inand([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
inand(f_float(42),[f_float(42),f_float(1),f_float(43)])
inand([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
inand(g_float(42),g_float(43))
inand([g_float(42),g_float(1),g_float(43)],g_float(42))
inand(g_float(42),[g_float(42),g_float(1),g_float(43)])
inand([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
inand(d_float(42),d_float(43))
inand([d_float(42),d_float(1),d_float(43)],d_float(42))
inand(d_float(42),[d_float(42),d_float(1),d_float(43)])
inand([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
inand(f_complex(42,43),f_complex(43,44))
inand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
inand(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inand([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inand(g_complex(42,43),g_complex(43,44))
inand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
inand(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inand([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inand(d_complex(42,43),d_complex(43,44))
inand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
inand(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inand([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
INAND_NOT(42bu,43bu)
INAND_NOT([42bu,1bu,43bu],42bu)
INAND_NOT(42bu,[42bu,1bu,43bu])
INAND_NOT([42bu,1bu,43bu],[42bu,1bu,43bu])
INAND_NOT(42wu,43wu)
INAND_NOT([42wu,1wu,43wu],42wu)
INAND_NOT(42wu,[42wu,1wu,43wu])
INAND_NOT([42wu,1wu,43wu],[42wu,1wu,43wu])
INAND_NOT(42lu,43lu)
INAND_NOT([42lu,1lu,43lu],42lu)
INAND_NOT(42lu,[42lu,1lu,43lu])
INAND_NOT([42lu,1lu,43lu],[42lu,1lu,43lu])
INAND_NOT(42qu,43qu)
INAND_NOT([42qu,1qu,43qu],42qu)
INAND_NOT(42qu,[42qu,1qu,43qu])
INAND_NOT([42qu,1qu,43qu],[42qu,1qu,43qu])
INAND_NOT(42ou,43ou)
INAND_NOT([42ou,1ou,43ou],42ou)
INAND_NOT(42ou,[42ou,1ou,43ou])
INAND_NOT([42ou,1ou,43ou],[42ou,1ou,43ou])
INAND_NOT(42b,43b)
INAND_NOT([42b,1b,43b],42b)
INAND_NOT(42b,[42b,1b,43b])
INAND_NOT([42b,1b,43b],[42b,1b,43b])
INAND_NOT(42w,43w)
INAND_NOT([42w,1w,43w],42w)
INAND_NOT(42w,[42w,1w,43w])
INAND_NOT([42w,1w,43w],[42w,1w,43w])
INAND_NOT(42l,43l)
INAND_NOT([42l,1l,43l],42l)
INAND_NOT(42l,[42l,1l,43l])
INAND_NOT([42l,1l,43l],[42l,1l,43l])
INAND_NOT(42q,43q)
INAND_NOT([42q,1q,43q],42q)
INAND_NOT(42q,[42q,1q,43q])
INAND_NOT([42q,1q,43q],[42q,1q,43q])
INAND_NOT(42o,43o)
INAND_NOT([42o,1o,43o],42o)
INAND_NOT(42o,[42o,1o,43o])
INAND_NOT([42o,1o,43o],[42o,1o,43o])
INAND_NOT(f_float(42),f_float(43))
INAND_NOT([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
INAND_NOT(f_float(42),[f_float(42),f_float(1),f_float(43)])
INAND_NOT([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
INAND_NOT(g_float(42),g_float(43))
INAND_NOT([g_float(42),g_float(1),g_float(43)],g_float(42))
INAND_NOT(g_float(42),[g_float(42),g_float(1),g_float(43)])
INAND_NOT([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
INAND_NOT(d_float(42),d_float(43))
INAND_NOT([d_float(42),d_float(1),d_float(43)],d_float(42))
INAND_NOT(d_float(42),[d_float(42),d_float(1),d_float(43)])
INAND_NOT([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
INAND_NOT(f_complex(42,43),f_complex(43,44))
INAND_NOT([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
INAND_NOT(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
INAND_NOT([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
INAND_NOT(g_complex(42,43),g_complex(43,44))
INAND_NOT([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
INAND_NOT(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
INAND_NOT([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
INAND_NOT(d_complex(42,43),d_complex(43,44))
INAND_NOT([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
INAND_NOT(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
INAND_NOT([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ior(42bu,43bu)
ior([42bu,1bu,43bu],42bu)
ior(42bu,[42bu,1bu,43bu])
ior([42bu,1bu,43bu],[42bu,1bu,43bu])
ior(42wu,43wu)
ior([42wu,1wu,43wu],42wu)
ior(42wu,[42wu,1wu,43wu])
ior([42wu,1wu,43wu],[42wu,1wu,43wu])
ior(42lu,43lu)
ior([42lu,1lu,43lu],42lu)
ior(42lu,[42lu,1lu,43lu])
ior([42lu,1lu,43lu],[42lu,1lu,43lu])
ior(42qu,43qu)
ior([42qu,1qu,43qu],42qu)
ior(42qu,[42qu,1qu,43qu])
ior([42qu,1qu,43qu],[42qu,1qu,43qu])
ior(42ou,43ou)
ior([42ou,1ou,43ou],42ou)
ior(42ou,[42ou,1ou,43ou])
ior([42ou,1ou,43ou],[42ou,1ou,43ou])
ior(42b,43b)
ior([42b,1b,43b],42b)
ior(42b,[42b,1b,43b])
ior([42b,1b,43b],[42b,1b,43b])
ior(42w,43w)
ior([42w,1w,43w],42w)
ior(42w,[42w,1w,43w])
ior([42w,1w,43w],[42w,1w,43w])
ior(42l,43l)
ior([42l,1l,43l],42l)
ior(42l,[42l,1l,43l])
ior([42l,1l,43l],[42l,1l,43l])
ior(42q,43q)
ior([42q,1q,43q],42q)
ior(42q,[42q,1q,43q])
ior([42q,1q,43q],[42q,1q,43q])
ior(42o,43o)
ior([42o,1o,43o],42o)
ior(42o,[42o,1o,43o])
ior([42o,1o,43o],[42o,1o,43o])
ior(f_float(42),f_float(43))
ior([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
ior(f_float(42),[f_float(42),f_float(1),f_float(43)])
ior([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
ior(g_float(42),g_float(43))
ior([g_float(42),g_float(1),g_float(43)],g_float(42))
ior(g_float(42),[g_float(42),g_float(1),g_float(43)])
ior([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
ior(d_float(42),d_float(43))
ior([d_float(42),d_float(1),d_float(43)],d_float(42))
ior(d_float(42),[d_float(42),d_float(1),d_float(43)])
ior([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
ior(f_complex(42,43),f_complex(43,44))
ior([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
ior(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ior([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ior(g_complex(42,43),g_complex(43,44))
ior([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
ior(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ior([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ior(d_complex(42,43),d_complex(43,44))
ior([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
ior(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ior([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inor(42bu,43bu)
inor([42bu,1bu,43bu],42bu)
inor(42bu,[42bu,1bu,43bu])
inor([42bu,1bu,43bu],[42bu,1bu,43bu])
inor(42wu,43wu)
inor([42wu,1wu,43wu],42wu)
inor(42wu,[42wu,1wu,43wu])
inor([42wu,1wu,43wu],[42wu,1wu,43wu])
inor(42lu,43lu)
inor([42lu,1lu,43lu],42lu)
inor(42lu,[42lu,1lu,43lu])
inor([42lu,1lu,43lu],[42lu,1lu,43lu])
inor(42qu,43qu)
inor([42qu,1qu,43qu],42qu)
inor(42qu,[42qu,1qu,43qu])
inor([42qu,1qu,43qu],[42qu,1qu,43qu])
inor(42ou,43ou)
inor([42ou,1ou,43ou],42ou)
inor(42ou,[42ou,1ou,43ou])
inor([42ou,1ou,43ou],[42ou,1ou,43ou])
inor(42b,43b)
inor([42b,1b,43b],42b)
inor(42b,[42b,1b,43b])
inor([42b,1b,43b],[42b,1b,43b])
inor(42w,43w)
inor([42w,1w,43w],42w)
inor(42w,[42w,1w,43w])
inor([42w,1w,43w],[42w,1w,43w])
inor(42l,43l)
inor([42l,1l,43l],42l)
inor(42l,[42l,1l,43l])
inor([42l,1l,43l],[42l,1l,43l])
inor(42q,43q)
inor([42q,1q,43q],42q)
inor(42q,[42q,1q,43q])
inor([42q,1q,43q],[42q,1q,43q])
inor(42o,43o)
inor([42o,1o,43o],42o)
inor(42o,[42o,1o,43o])
inor([42o,1o,43o],[42o,1o,43o])
inor(f_float(42),f_float(43))
inor([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
inor(f_float(42),[f_float(42),f_float(1),f_float(43)])
inor([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
inor(g_float(42),g_float(43))
inor([g_float(42),g_float(1),g_float(43)],g_float(42))
inor(g_float(42),[g_float(42),g_float(1),g_float(43)])
inor([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
inor(d_float(42),d_float(43))
inor([d_float(42),d_float(1),d_float(43)],d_float(42))
inor(d_float(42),[d_float(42),d_float(1),d_float(43)])
inor([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
inor(f_complex(42,43),f_complex(43,44))
inor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
inor(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inor(g_complex(42,43),g_complex(43,44))
inor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
inor(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inor(d_complex(42,43),d_complex(43,44))
inor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
inor(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inor_not(42bu,43bu)
inor_not([42bu,1bu,43bu],42bu)
inor_not(42bu,[42bu,1bu,43bu])
inor_not([42bu,1bu,43bu],[42bu,1bu,43bu])
inor_not(42wu,43wu)
inor_not([42wu,1wu,43wu],42wu)
inor_not(42wu,[42wu,1wu,43wu])
inor_not([42wu,1wu,43wu],[42wu,1wu,43wu])
inor_not(42lu,43lu)
inor_not([42lu,1lu,43lu],42lu)
inor_not(42lu,[42lu,1lu,43lu])
inor_not([42lu,1lu,43lu],[42lu,1lu,43lu])
inor_not(42qu,43qu)
inor_not([42qu,1qu,43qu],42qu)
inor_not(42qu,[42qu,1qu,43qu])
inor_not([42qu,1qu,43qu],[42qu,1qu,43qu])
inor_not(42ou,43ou)
inor_not([42ou,1ou,43ou],42ou)
inor_not(42ou,[42ou,1ou,43ou])
inor_not([42ou,1ou,43ou],[42ou,1ou,43ou])
inor_not(42b,43b)
inor_not([42b,1b,43b],42b)
inor_not(42b,[42b,1b,43b])
inor_not([42b,1b,43b],[42b,1b,43b])
inor_not(42w,43w)
inor_not([42w,1w,43w],42w)
inor_not(42w,[42w,1w,43w])
inor_not([42w,1w,43w],[42w,1w,43w])
inor_not(42l,43l)
inor_not([42l,1l,43l],42l)
inor_not(42l,[42l,1l,43l])
inor_not([42l,1l,43l],[42l,1l,43l])
inor_not(42q,43q)
inor_not([42q,1q,43q],42q)
inor_not(42q,[42q,1q,43q])
inor_not([42q,1q,43q],[42q,1q,43q])
inor_not(42o,43o)
inor_not([42o,1o,43o],42o)
inor_not(42o,[42o,1o,43o])
inor_not([42o,1o,43o],[42o,1o,43o])
inor_not(f_float(42),f_float(43))
inor_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
inor_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
inor_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
inor_not(g_float(42),g_float(43))
inor_not([g_float(42),g_float(1),g_float(43)],g_float(42))
inor_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
inor_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
inor_not(d_float(42),d_float(43))
inor_not([d_float(42),d_float(1),d_float(43)],d_float(42))
inor_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
inor_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
inor_not(f_complex(42,43),f_complex(43,44))
inor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
inor_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
inor_not(g_complex(42,43),g_complex(43,44))
inor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
inor_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
inor_not(d_complex(42,43),d_complex(43,44))
inor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
inor_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
inor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ior_not(42bu,43bu)
ior_not([42bu,1bu,43bu],42bu)
ior_not(42bu,[42bu,1bu,43bu])
ior_not([42bu,1bu,43bu],[42bu,1bu,43bu])
ior_not(42wu,43wu)
ior_not([42wu,1wu,43wu],42wu)
ior_not(42wu,[42wu,1wu,43wu])
ior_not([42wu,1wu,43wu],[42wu,1wu,43wu])
ior_not(42lu,43lu)
ior_not([42lu,1lu,43lu],42lu)
ior_not(42lu,[42lu,1lu,43lu])
ior_not([42lu,1lu,43lu],[42lu,1lu,43lu])
ior_not(42qu,43qu)
ior_not([42qu,1qu,43qu],42qu)
ior_not(42qu,[42qu,1qu,43qu])
ior_not([42qu,1qu,43qu],[42qu,1qu,43qu])
ior_not(42ou,43ou)
ior_not([42ou,1ou,43ou],42ou)
ior_not(42ou,[42ou,1ou,43ou])
ior_not([42ou,1ou,43ou],[42ou,1ou,43ou])
ior_not(42b,43b)
ior_not([42b,1b,43b],42b)
ior_not(42b,[42b,1b,43b])
ior_not([42b,1b,43b],[42b,1b,43b])
ior_not(42w,43w)
ior_not([42w,1w,43w],42w)
ior_not(42w,[42w,1w,43w])
ior_not([42w,1w,43w],[42w,1w,43w])
ior_not(42l,43l)
ior_not([42l,1l,43l],42l)
ior_not(42l,[42l,1l,43l])
ior_not([42l,1l,43l],[42l,1l,43l])
ior_not(42q,43q)
ior_not([42q,1q,43q],42q)
ior_not(42q,[42q,1q,43q])
ior_not([42q,1q,43q],[42q,1q,43q])
ior_not(42o,43o)
ior_not([42o,1o,43o],42o)
ior_not(42o,[42o,1o,43o])
ior_not([42o,1o,43o],[42o,1o,43o])
ior_not(f_float(42),f_float(43))
ior_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
ior_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
ior_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
ior_not(g_float(42),g_float(43))
ior_not([g_float(42),g_float(1),g_float(43)],g_float(42))
ior_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
ior_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
ior_not(d_float(42),d_float(43))
ior_not([d_float(42),d_float(1),d_float(43)],d_float(42))
ior_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
ior_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
ior_not(f_complex(42,43),f_complex(43,44))
ior_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
ior_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ior_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ior_not(g_complex(42,43),g_complex(43,44))
ior_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
ior_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ior_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ior_not(d_complex(42,43),d_complex(43,44))
ior_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
ior_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ior_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ieor(42bu,43bu)
ieor([42bu,1bu,43bu],42bu)
ieor(42bu,[42bu,1bu,43bu])
ieor([42bu,1bu,43bu],[42bu,1bu,43bu])
ieor(42wu,43wu)
ieor([42wu,1wu,43wu],42wu)
ieor(42wu,[42wu,1wu,43wu])
ieor([42wu,1wu,43wu],[42wu,1wu,43wu])
ieor(42lu,43lu)
ieor([42lu,1lu,43lu],42lu)
ieor(42lu,[42lu,1lu,43lu])
ieor([42lu,1lu,43lu],[42lu,1lu,43lu])
ieor(42qu,43qu)
ieor([42qu,1qu,43qu],42qu)
ieor(42qu,[42qu,1qu,43qu])
ieor([42qu,1qu,43qu],[42qu,1qu,43qu])
ieor(42ou,43ou)
ieor([42ou,1ou,43ou],42ou)
ieor(42ou,[42ou,1ou,43ou])
ieor([42ou,1ou,43ou],[42ou,1ou,43ou])
ieor(42b,43b)
ieor([42b,1b,43b],42b)
ieor(42b,[42b,1b,43b])
ieor([42b,1b,43b],[42b,1b,43b])
ieor(42w,43w)
ieor([42w,1w,43w],42w)
ieor(42w,[42w,1w,43w])
ieor([42w,1w,43w],[42w,1w,43w])
ieor(42l,43l)
ieor([42l,1l,43l],42l)
ieor(42l,[42l,1l,43l])
ieor([42l,1l,43l],[42l,1l,43l])
ieor(42q,43q)
ieor([42q,1q,43q],42q)
ieor(42q,[42q,1q,43q])
ieor([42q,1q,43q],[42q,1q,43q])
ieor(42o,43o)
ieor([42o,1o,43o],42o)
ieor(42o,[42o,1o,43o])
ieor([42o,1o,43o],[42o,1o,43o])
ieor(f_float(42),f_float(43))
ieor([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
ieor(f_float(42),[f_float(42),f_float(1),f_float(43)])
ieor([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
ieor(g_float(42),g_float(43))
ieor([g_float(42),g_float(1),g_float(43)],g_float(42))
ieor(g_float(42),[g_float(42),g_float(1),g_float(43)])
ieor([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
ieor(d_float(42),d_float(43))
ieor([d_float(42),d_float(1),d_float(43)],d_float(42))
ieor(d_float(42),[d_float(42),d_float(1),d_float(43)])
ieor([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
ieor(f_complex(42,43),f_complex(43,44))
ieor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
ieor(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ieor([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ieor(g_complex(42,43),g_complex(43,44))
ieor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
ieor(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ieor([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ieor(d_complex(42,43),d_complex(43,44))
ieor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
ieor(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ieor([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ieor_not(42bu,43bu)
ieor_not([42bu,1bu,43bu],42bu)
ieor_not(42bu,[42bu,1bu,43bu])
ieor_not([42bu,1bu,43bu],[42bu,1bu,43bu])
ieor_not(42wu,43wu)
ieor_not([42wu,1wu,43wu],42wu)
ieor_not(42wu,[42wu,1wu,43wu])
ieor_not([42wu,1wu,43wu],[42wu,1wu,43wu])
ieor_not(42lu,43lu)
ieor_not([42lu,1lu,43lu],42lu)
ieor_not(42lu,[42lu,1lu,43lu])
ieor_not([42lu,1lu,43lu],[42lu,1lu,43lu])
ieor_not(42qu,43qu)
ieor_not([42qu,1qu,43qu],42qu)
ieor_not(42qu,[42qu,1qu,43qu])
ieor_not([42qu,1qu,43qu],[42qu,1qu,43qu])
ieor_not(42ou,43ou)
ieor_not([42ou,1ou,43ou],42ou)
ieor_not(42ou,[42ou,1ou,43ou])
ieor_not([42ou,1ou,43ou],[42ou,1ou,43ou])
ieor_not(42b,43b)
ieor_not([42b,1b,43b],42b)
ieor_not(42b,[42b,1b,43b])
ieor_not([42b,1b,43b],[42b,1b,43b])
ieor_not(42w,43w)
ieor_not([42w,1w,43w],42w)
ieor_not(42w,[42w,1w,43w])
ieor_not([42w,1w,43w],[42w,1w,43w])
ieor_not(42l,43l)
ieor_not([42l,1l,43l],42l)
ieor_not(42l,[42l,1l,43l])
ieor_not([42l,1l,43l],[42l,1l,43l])
ieor_not(42q,43q)
ieor_not([42q,1q,43q],42q)
ieor_not(42q,[42q,1q,43q])
ieor_not([42q,1q,43q],[42q,1q,43q])
ieor_not(42o,43o)
ieor_not([42o,1o,43o],42o)
ieor_not(42o,[42o,1o,43o])
ieor_not([42o,1o,43o],[42o,1o,43o])
ieor_not(f_float(42),f_float(43))
ieor_not([f_float(42),f_floaT(1),f_floaT(43)],f_float(42))
ieor_not(f_float(42),[f_float(42),f_float(1),f_float(43)])
ieor_not([f_float(42),f_float(1),f_float(43)],[f_floaT(42),f_float(1),f_float(43)])
ieor_not(g_float(42),g_float(43))
ieor_not([g_float(42),g_float(1),g_float(43)],g_float(42))
ieor_not(g_float(42),[g_float(42),g_float(1),g_float(43)])
ieor_not([g_float(42),g_float(1),g_float(43)],[g_float(42),g_float(1),g_float(43)])
ieor_not(d_float(42),d_float(43))
ieor_not([d_float(42),d_float(1),d_float(43)],d_float(42))
ieor_not(d_float(42),[d_float(42),d_float(1),d_float(43)])
ieor_not([d_float(42),d_float(1),d_float(43)],[d_float(42),d_float(1),d_float(43)])
ieor_not(f_complex(42,43),f_complex(43,44))
ieor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],f_complex(42,43))
ieor_not(f_complex(42,43),[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ieor_not([f_complex(42,43),f_complex(1,2),f_complex(43,44)],[f_complex(42,43),f_complex(1,2),f_complex(43,44)])
ieor_not(g_complex(42,43),g_complex(43,44))
ieor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],g_complex(42,43))
ieor_not(g_complex(42,43),[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ieor_not([g_complex(42,43),g_complex(1,2),g_complex(43,44)],[g_complex(42,43),g_complex(1,2),g_complex(43,44)])
ieor_not(d_complex(42,43),d_complex(43,44))
ieor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],d_complex(42,43))
ieor_not(d_complex(42,43),[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
ieor_not([d_complex(42,43),d_complex(1,2),d_complex(43,44)],[d_complex(42,43),d_complex(1,2),d_complex(43,44)])
#
# Functions implemented in TdiMath1.c
#
atanh(.5)
cosh(1.)
log2(1.)
sinh(1.)
tanh(1.)
acos(1.)
acosd(1.)
aint(1.)
anint(1.5)
asin(1.)
asind(1.)
atan(1.)
atand(1.)
cosd(1.)
floor(1.4)
log10(1.0)
sind(1.0)
tan(1.0)
tand(1.0)
cos(1.0)
exp(1.0)
log(1.0)
sin(1.0)
sqrt(4.0)
arg(f_complex(1.0,4.0))
argd(f_complex(1.0,2.0))
#
# Functions implemented in TdiMath2.c
#
atan2(1.0,2.0)
atan2d(1.0,2.0)
mod(10.5,3.)
#
# Functions implemented in TdiMatrix.c
#
diagonal([1,2,3])
#
# Functions implemented in TdiMaxVal.c
#
maxloc([2,4,6.])
minloc([2,4,6])
maxval([2,4,6])
minval([2,4,6])
mean([2,4,6])
product([2,4,6])
sum([2,4,6])
accumulate([2,4,6])
#
# Functions implemented in TdiMinMax.c
#
[1,0,1,0,1,0] ? 1 : 42
#
# Functions implemented in TdiPack.c
#
_M=[[0,0,0],[9,0,0],[007]]
pack(_m,_m ne 0)
pack(_m,_m ne 0,[2,4,6,8,10,12])
#
# Functions implemented in TdiPower.c
#
merge([1,2,3],[4,5,6],[$TRUE,$FALSE,$TRUE])
_TSOURCE=[[1,6,5],[2,4,6]]
_FSOURCE=[[0,3,2],[7,4,8]]
_MASK=[[1,0,1],[0,0,1]]
merge(_TSOURCE,_FSOURCE,_MASK)
power(2.,4.)
[1,0,1,0,1,0] ? 1 : 42
#
# Functions implemented in TdiScalar.c
#
bit_size(42ub)
bit_size(42uw)
bit_size(42ul)
bit_size(42uq)
bit_size(42uo)
bit_size(42b)
bit_size(42w)
bit_size(42l)
bit_size(42q)
bit_size(42o)
bit_size(42F0)
bit_size(42V0)
bit_size(42G0)
bit_size(42S0)
bit_size(42T0)
digits(42ub)
digits(42uw)
digits(42ul)
digits(42uq)
digits(42uo)
digits(42b)
digits(42w)
digits(42l)
digits(42q)
digits(42o)
digits(42F0)
digits(42V0)
digits(42G0)
digits(42S0)
digits(42T0)
epsilon(42F0)
epsilon(42V0)
epsilon(42G0)
epsilon(42S0)
epsilon(42T0)
epsilon(cmplx(42F0))
epsilon(cmplx(42V0))
epsilon(cmplx(42G0))
epsilon(cmplx(42S0))
epsilon(cmplx(42T0))
huge(42F0)
huge(42V0)
huge(42G0)
huge(42S0)
huge(42T0)
huge(cmplx(42F0))
huge(cmplx(42V0))
huge(cmplx(42G0))
huge(cmplx(42S0))
huge(cmplx(42T0))
len(42ub)
len(42uw)
len(42ul)
len(42uq)
len(42uo)
len(42b)
len(42w)
len(42l)
len(42q)
len(42o)
len(42F0)
len(42V0)
len(42G0)
len(42S0)
len(42T0)
maxexponent(42F0)
maxexponent(42V0)
maxexponent(42G0)
maxexponent(42S0)
maxexponent(42T0)
maxexponent(cmplx(42F0))
maxexponent(cmplx(42V0))
maxexponent(cmplx(42G0))
maxexponent(cmplx(42S0))
maxexponent(cmplx(42T0))
minexponent(42F0)
minexponent(42V0)
minexponent(42G0)
minexponent(42S0)
minexponent(42T0)
minexponent(cmplx(42F0))
minexponent(cmplx(42V0))
minexponent(cmplx(42G0))
minexponent(cmplx(42S0))
minexponent(cmplx(42T0))
precision(42F0)
precision(42V0)
precision(42G0)
precision(42S0)
precision(42T0)
precision(cmplx(42F0))
precision(cmplx(42V0))
precision(cmplx(42G0))
precision(cmplx(42S0))
precision(cmplx(42T0))
radix(42ub)
radix(42uw)
radix(42ul)
radix(42uq)
radix(42uo)
radix(42b)
radix(42w)
radix(42l)
radix(42q)
radix(42o)
radix(42F0)
radix(42V0)
radix(42G0)
radix(42S0)
radix(42T0)
radix(cmplx(42F0))
radix(cmplx(42V0))
radix(cmplx(42G0))
radix(cmplx(42S0))
radix(cmplx(42T0))
range(42F0)
range(42V0)
range(42G0)
range(42S0)
range(42T0)
range(cmplx(42F0))
range(cmplx(42V0))
range(cmplx(42G0))
range(cmplx(42S0))
range(cmplx(42T0))
rank(0)
rank([1,2])
rank([[1,2],[2,3]])
selected_int_kind(6)
selected_real_kind(6,30)
sizeof([1,2])
tiny(42F0)
tiny(42V0)
tiny(42G0)
tiny(42S0)
tiny(42T0)
tiny(cmplx(42F0))
tiny(cmplx(42V0))
tiny(cmplx(42G0))
tiny(cmplx(42S0))
tiny(cmplx(42T0))
dot_product([42,33],[1,0])
#
# Functions implemented in TdiSort.c
#
bsearch(3,1:10)
bsearch(1:8,3:5)
sort([3,5,4,6])
sort(['abs','ab','b'])
sortval([3,5,4,6])
sortval(['abs','ab','b'])
union([4,5],[2,3,5])
6 is_in [1:5,7]
6 is_in 1:6
#
# Functions implemented in TdiXxxOf.c
#
ARG_OF(SIN(5.0))
ARG_OF(1+2,1)
AXIS_OF(BUILD_DIM(1:10,20:30))
AXIS_OF(20:30)
BEGIN_OF(20:30)
BEGIN_OF(BUILD_SLOPE(3,1,10))
BEGIN_OF(BUILD_WINDOW(1,10,0.0))
CLASS_OF([1,2,3])
CLASS_OF(1)
CLASS_OF(BUILD_SIGNAL(1,2,3))
CLASS([1,2,3])
CLASS(1)
CLASS(BUILD_SIGNAL(1,2,3))
COMPLETION_OF(Build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"))
completion_message_of(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF","MESSGE"))
#condition_of()
dim_of(build_signal(*,*,1:10,20:25),1)
dim_of(1:10)
dispatch_of(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF"))
dprod(3,4)
dprod(-3.0,2.0)
dscptr_of(build_signal(1.,2.,3.,4.),2)
dscptr(build_signal(1.,2.,3.,4.),2)
kind_of(42)
kind(42)
END_OF(20:30)
END_OF(BUILD_SLOPE(3,1,10))
END_OF(BUILD_WINDOW(1,10,0.0))
ERROR_OF(BUILD_WITH_ERROR(42.,43.))
ERRORLOGS_OF(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF"))
#HELP_OF()
ident_of(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF"))
image_of(TdiShr->TdiGetLong())
#interrupt_of()
#language_of()
method_of(build_method("TIMEOUT","INIT","OBJECT"))
model_of(Build_conglom("MIT$DEVICES","A12",*,*))
name_of(Build_conglom("MIT$DEVICES","A12","MYDIG",*))
ndesc_of(Build_conglom("MIT$DEVICES","A12","MYDIG",*))
ndesc(Build_conglom("MIT$DEVICES","A12","MYDIG",*))
object_of(build_method(0,"INIT","OBJECT"))
#performance_of()
PHASE_OF(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method("TIMEOUT","METHOD","OBJECT"),"TWF"))
#procedure_of()
#program_of()
qualifiers_of(Build_conglom("MIT$DEVICES","A12","MYDIG","QUALIFIERS"))
raw_of(build_signal("VALUE","RAW","DIM"))
routine_of(TdiShr->TdiGetLong())
slope_of(build_slope(3,1,10))
task_of(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method(0,"INIT","OBJECT"),"TWF"))
time_out_of(build_method("TIMEOUT","INIT","OBJECT"))
units_of(build_with_units("DATA","UNITS"))
units(build_with_units("DATA","UNITS"))
#validation_of()
value_of(build_signal("VALUE","RAW","DIM"))
value_of(build_window("START","END","VALUE_AT_IDX0"))
value_of(build_with_units("VALUE","UNITS"))
when_of(Build_action(build_dispatch(2,"CAMAC_SERVER","INIT",50,"DONE_EVENT"),build_method(0,"INIT","OBJECT"),"TWF"))
window_of(build_dim("WINDOW","TASK"))
#
# Functions implemented in TdiXxx.c
#
all([$TRUE,$FALSE,$TRUE])
_B=[[1,3,5],[2,4,6]]
_C=[[0,3,5],[7,4,8]]
all(_b ne _c,0)
all(_b ne _c,1)
any([$TRUE,$FALSE,$TRUE])
_B=[[1,3,5],[2,4,6]]
_C=[[0,3,5],[7,4,8]]
any(_b ne _c,0)
any(_b ne _c,1)
cvt(1,"  ")
cvt(10,1.)
real(1)
signed(42ub)
signed(42uw)
signed(42ul)
signed(42uq)
signed(42uo)
signed(42b)
signed(42w)
signed(42l)
signed(42q)
signed(42o)
unsigned(42ub)
unsigned(42uw)
unsigned(42ul)
unsigned(42uq)
unsigned(42uo)
unsigned(42b)
unsigned(42w)
unsigned(42l)
unsigned(42q)
unsigned(42o)
text(42,5)
#
# Functions implemented in TdiSubscript
#
(1:100)[42]
build_signal(1:10,*,["1","2","3","4","5","6","7","8","9","10"])["5"]
build_signal(1:10,*,1:10)[-1:5]
Build_signal(1:100,*,build_dim(*,.01:1:.01))[.2:.25]
MAP(1:10,[20,-1,5])
(_A=5:1:-1, MAP(_A,SORT(_A)))
#
# Functions implemented in TdiStatement
#
(public fun myfun(in _in, inout _inout, out _out) {\
    switch(_in) {\
        case(1)  _out = "case 1"; break;\
        case(2)  _out = "case 2"; break;\
        case default goto _do_abort;\
   }\
   _J = _inout;\
   for (_I=0;_I<100;_I++) {\
     if (_I >= _J) continue;\
     _inout = _I;\
   };\
   do {_J++;} WHILE (_J < 100);\
   WHILE (_J > 0) _J--;\
   REM("This is a comment");\
   if (_inout == -1)\
     _inout = "Bad";\
   else\
     _inout = "Ok";\
   return(_J);\
label _do_abort: abort();\
})
(_a=42,myfun(1,_a,_b),_a)
(_a=42,myfun(2,_a,_b),_b)
#
# Functions implemented in TdiSquare
#
square(4)
cmplx(1,1,kind(1.))
cmplx(1:10,*,kind(0g0))
cmplx(1:10)
ceiling(1.:3:.1)
ceiling(-1.:-3:-.1)
#
# Functions implemented in TdiVar
#
_a=1
_b=42
deallocate(_a)
_b
(public fun myfun2(optional _in){return(present(_in));})
myfun2(1)
myfun2()
(public fun myfun3(optional _in1,optional _in2){return($NARG);})
myfun3(1)
myfun3(1,2)
_a=1
_b=_a++
_a
_b=_a--
_a
--_a
++_a
var("_a")
public _a=42
private(_a)
public(_a)
reset_private()
reset_public()
#
# Functions implemented in TdiTrans.c
#
_M=[[0,0,1,0],[0,1,1,0],[0,1,0,1],[0,0,0,0]]
count([$TRUE,$FALSE,$TRUE])
_b=[[1,3,5],[2,4,6]]
_c=[[0,3,5],[7,4,8]]
count(_b ne _c,0)
count(_b ne _c,1)
firstloc(_M)
firstloc(_M,0)
lastloc(_M)
lastloc(_M,0)
replicate([[2,4],[3,5]],1,3)
spread([2,3,4],0,3)
#
# Functions implemented in TdiTrim.c
#
trim(' A B  ')
(public fun showopcodes(){\
  for (_i=0;1;_i++) {\
   _s=if_error(OPCODE_BUILTIN(_i)," ");\
   if (_s == " ") break;\
   write(,_s//"   "//OPCODE_STRING(_i)//"   "//text(_i));\
  };\
})
showopcodes()
#
# Functions implemented in TdiIo.c
#
kind(_u=fopen('tditst.tmp','w'))
write(_u,"This is a test")
fclose(_u)
kind(_u=fopen('tditst.tmp','r'))
fseek(_u,5,0)
ftell(_u)
wait(.01)
#
# Functions implemented in TdiData.c
#
data(build_signal(1:10,*,*))
data_with_units(build_signal(10*$VALUE,build_with_units(1:10,"counts"),*))
data(*)
data(*)[0]
#
# Functions implemented in TdiItoX.c
#
I_TO_X(BUILD_DIM(BUILD_WINDOW(2,5,1.1),BUILD_RANGE(,,3)))
I_TO_X(BUILD_DIM(BUILD_WINDOW(2,7,1.1),BUILD_RANGE(,,3)),1:4)
#
# Functions implemented in TdiXtoI.c
#
X_TO_I(BUILD_DIM(BUILD_WINDOW(2,5,1.1),BUILD_RANGE(,,3)))
X_TO_I(BUILD_DIM(BUILD_WINDOW(2,7,1.1),BUILD_RANGE(,,3)),[4.1,7.1,10.1,13.1])
#
# Functions implemented in TdiGetData.c
#
data(BUILD_SLOPE(.1,0.,1.,.2,1.2,2.))
#
# Miscellaneous
#
_x=build_signal(10*$VALUE,1:10,*)
long(_x)
float(1:10)
dble(1)
#
# unused
#
# compile_dependency()
# decompile_dependency()
#
# Unimplemented functions in opc table
#
#backspace()
#convolve()
#cshift()
#date_and_time()
#decode()
#derivative()
#elsewhere()
#encode()
#endfile()
#eoshift()
#fft()
#fit()
#ibits()
#inquire()
#integral()
#interpol()
#intersect()
#inverse()
#ishftc()
#laminate()
#mat_rot()
#mat_rot_int()
#matmul()
#median()
#modulo()
#nearest()
#on_error()
#project()
#promote()
#random_seed()
#rc_droop
#read()
#rebin()
#reshape()
#rewind()
#rms()
#sign()
#smooth()
#solve()
#std_dev()
#string()
#system_clock()
#transfer()
#transpose()
#transpose_mul()
#unpack()
#where()
#
# The following are tests for various bugs which have shown up
#
# Bug in I_TO_X found 8/5/96
_FREQUENCY = [1000.,-.32]
_DUTY_CYCLE = -1 * _FREQUENCY[1]
(_DECODER_CHANNEL_1 = * : * : .001,1)
_GATE_FREQ = SLOPE_OF(_DECODER_CHANNEL_1)
_TIMES = -4. + _GATE_FREQ * _DUTY_CYCLE : 8. : _GATE_FREQ / 2
_NTIMES = SIZE(_TIMES)
(_MASK = REPLICATE([0,1],0,_NTIMES/2 + 1),1)
(_TIMES += ((.5 - _DUTY_CYCLE) * _GATE_FREQ - 1 /100000.) * _MASK[0 : _NTIMES - 1],1)
_DUTY_CYCLE
_GATE_FREQ
_NTIMES
_TIMES[0]
_TIMES[SIZE(_TIMES)-1]
(_CLOCK=PACK(_TIMES + 10E-6 * .5, REPLICATE([1,0],0,SIZE(_TIMES)/2)) : PACK(_TIMES, REPLICATE([0,1],0,SIZE(_TIMES)/2)) : 10E-6,1)
SIZE(_CLOCK)
_STOP_TRIG=-.003
(_ANS=I_TO_X(BUILD_DIM(BUILD_WINDOW(-1,0,_STOP_TRIG),_CLOCK)),1)
LBOUND(_ANS)
UBOUND(_ANS)
_ANS  /* Should equal  Set_Range(-1:0,[-.00267482,-.00266482]) */
deallocate()
ge(0x60000000QU,0xE0000000QU)
gt(0x60000000QU,0xE0000000QU)
le(0x60000000QU,0xE0000000QU)
lt(0x60000000QU,0xE0000000QU)
ne(0x60000000QU,0xE0000000QU)
eq(0x60000000QU,0xE0000000QU)
eq(0xE0000000QU,0xE0000000QU)
eq(0x60000000QU,0x60000000QU)
#old compile did hang
compile(text(vms()))
list()
tuple()
dict()
list(,"a",1,"b",2)
tuple(,"a",1,"b",2)
dict(,"a",1,"b",2)
decompile(`list(,"a",1,"b",2),1)
decompile(`tuple(,"a",1,"b",2),1)
decompile(`dict(,"a",1,"b",2),1)
decompile(`zero(32758,1))
# test if functions compile without treectx when containing pathlike NIDs
fun nid()nid
`compile("1")
# test comment
/* case should raise TREE-W-NOT_OPEN **/
case
x_to_i(["abc"],[]) /** [] **/
x_to_i(["def4","abc"],["abc"]) /** [1] ; trailing " " ignored **/
bsearch("d",["def4","abc"]) /** no match : index = -1 **/
x_to_i(["def4","abc"],["d"]) /** bsearch returns -1 mapping to nearest, i.e. 0-th element (storted) **/
build_signal([1,2,3],*,["a","b","c"])["d"] /** empty signal **/
TreeShr->MaskReplace:C(ref("/trees/~j~i/~h~g/~f~e/~d~c/~t"), ref("test"), val(123456789))
