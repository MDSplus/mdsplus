/*
 * Generated by the ICS builderXcessory (BX).
 *
 *
 * Builder Xcessory 3.5.1 VMS.
 *
 */
module MAIN_UIL
version = 'V1.0'
names = case_sensitive
!(BX) bx_info("app_class", "BuilderProduct")
!(BX) bx_info("app_name", "builderProduct")
!(BX) bx_info("app_defaults", "APP-DEFAULTS.DAT")
!(BX) bx_info("c++_old_construct", "false")
!(BX) bx_info("c++_unmanage_dialogs", "true")
!(BX) bx_info("c++_gen_derived", "true")
!(BX) bx_info("c++_target", "MAIN-CXX.EXE")
!(BX) bx_info("c++_hdrext", "HXX")
!(BX) bx_info("c++_srcext", "CXX")
!(BX) bx_info("c++_callbacks", "CALLBACKS-CXX", true)
!(BX) bx_info("c++_utilities", "BXUTIL-CXX.CXX", true)
!(BX) bx_info("c++_constants", "DEFS-CXX", true)
!(BX) bx_info("c++_baseclass", "UICOMPONENTXX", true)
!(BX) bx_info("c++_main", "MAIN-CXX.CXX", true)
!(BX) bx_info("c++_makefile", "MAKEFILE-CXX.MMS", true)
!(BX) bx_info("c++_imakefile", "MAKEFILE-CXX.COM", true)
!(BX) bx_info("c_reverse_dialogs", "true")
!(BX) bx_info("c_dialogs_in_routine", "true")
!(BX) bx_info("c_unmanage_dialogs", "true")
!(BX) bx_info("c_target", "MAIN-C.EXE")
!(BX) bx_info("c_utilities", "BXUTIL-C.C", true)
!(BX) bx_info("c_constants", "CREATION-C.H", true)
!(BX) bx_info("c_callbacks", "CALLBACKS-C.C", true)
!(BX) bx_info("c_creation", "CREATION-C.C", true)
!(BX) bx_info("c_main", "MAIN-C.C", true)
!(BX) bx_info("c_makefile", "MAKEFILE-C.MMS", true)
!(BX) bx_info("c_imakefile", "MAKEFILE-C.COM", true)
!(BX) bx_info("uil_target", "MAIN-UIL.EXE")
!(BX) bx_info("uil_utilities", "BXUTIL-UIL.C", true)
!(BX) bx_info("uil_constants", "MAIN-UIL.H", true)
!(BX) bx_info("uil_callbacks", "CALLBACKS-UIL.C", true)
!(BX) bx_info("uil_uil", "A.UIL", true)
!(BX) bx_info("uil_main", "MAIN-UIL.C", true)
!(BX) bx_info("uil_makefile", "MAKEFILE-UIL.MMS", true)
!(BX) bx_info("uil_imakefile", "MAKEFILE-UIL.COM", true)
!(BX) bx_info("include_path", "[]", false)
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o", false)
!(BX) bx_info("c++_libraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.exe/s"&
!(BX)	"hare,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlibshrr5."&
!(BX)	"exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$shr.exe/sh"&
!(BX)	"are")
!(BX) bx_info("c++_flags", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("c++_cc", "CC")
!(BX) bx_info("system_directory", "BX$SYSTEM:")
!(BX) bx_info("makefile_options", "main-uil.exe : readint.obj, readstring.obj, listtree.obj",
!(BX)		"l"&
!(BX)	"isttree.obj : listtree.c, listtree.h,listtreep.h", false)
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("uil", "uil")
!(BX) bx_info("cc", "cc")
!(BX) bx_info("cpp", "CC")
!(BX) bx_info("cOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12.ex"&
!(BX)	"e/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$xtlib"&
!(BX)	"shrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:decc$s"&
!(BX)	"hr.exe/share")
!(BX) bx_info("uilCOutputIncludes", "/standard=vaxc/define=(__STDC__=1)/deb/noopt")
!(BX) bx_info("uilUILOutputIncludes", "/motif")
!(BX) bx_info("uilOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share,sys$share:tdishr/share,sys$share:mdsshr/shar"&
!(BX)	"e,sys$share:mdslib/share,sys$share:xmdsshr/share, []readstring."&
!(BX)	"obj, []readint.obj,[]listtree.obj")
!(BX) bx_info("makefileOptions", "main-uil.exe : readint.obj, readstring.obj, listtree.obj",
!(BX)		"l"&
!(BX)	"isttree.obj : listtree.c, listtree.h,listtreep.h")
!(BX) bx_info("cppOutputIncludes", "/standard=vaxc/define=(__STDC__=1)")
!(BX) bx_info("cppOutputLibraries", "sys$share:decw$dxmlibshr12.exe/share,sys$share:decw$xmlibshr12."&
!(BX)	"exe/share,sys$share:decw$mrmlibshr12.exe/share,sys$share:decw$x"&
!(BX)	"tlibshrr5.exe/share,sys$share:decw$xlibshr.exe/share,sys$share:"&
!(BX)	"decc$shr.exe/share")
!(BX) bx_info("makefileLinkFlags", "/deb")
!(BX) bx_info("builder_version", "Builder Xcessory 3.5.1 VMS")
!(BX) bx_info("ansi", "true")
!(BX) bx_info("use_locales", "false")
!(BX) bx_info("new_mrm_style", "true")
!(BX) bx_info("c_wrap_lines", "true")
!(BX) bx_info("uil_wrap_lines", "true")
!(BX) bx_info("integrate_purify", "false")
!(BX) bx_info("purify_command", "purify")
!(BX) bx_info("integrate_xrunner", "false")
!(BX) bx_info("xrunner_command", "$(M_ROOT)/arch/X11.5/Xm1.2/mic_xm.o")

include file "XmdsWidgets.uil";

value
    DEVICE_NID :  -1;
    DEVICE$N_NAME :  1;
    DEVICE$N_COMMENT :  2;
    DEVICE$N_INIT_ACTION :  0;
    DEVICE$N_STORE_ACTION :  0;
    DEVICE$K_NODES_PER_INP :  3;
    DEVICE$N_INP_HEAD :  0;
    DEVICE$N_INP_ENDIDX :  2;
    DEVICE$N_INP_STARTIDX :  1;
    DEVICE$N_INPUTS :  12;
    L6810C$K_CONG_NODES :  36;
    L6810C$N_HEAD :  0;
    L6810C$N_NAME :  1;
    L6810C$N_COMMENT :  2;
    L6810C$N_FREQ :  3;
    L6810C$N_EXT_CLOCK_IN :  4;
    L6810C$N_STOP_TRIG :  5;
    L6810C$N_MEMORIES :  6;
    L6810C$N_SEGMENTS :  7;
    L6810C$N_ACTIVE_MEM :  8;
    L6810C$N_ACTIVE_CHANS :  9;
    L6810C$N_INPUTS :  10;
    L6810C$K_NODES_PER_INP :  6;
    L6810C$N_INP_HEAD :  0;
    L6810C$N_INP_STARTIDX :  1;
    L6810C$N_INP_ENDIDX :  2;
    L6810C$N_INP_FULL_SCALE :  3;
    L6810C$N_INP_SRC_CPLING :  4;
    L6810C$N_INP_OFFSET :  5;
    L6810C$N_INIT_ACTION :  34;
    L6810C$N_STORE_ACTION :  35;
    L6810C$N_TRIGGER_DLY :  36;

    gains :  string_table(
	compound_string(".4096"),
	compound_string(" 1.024"),
	compound_string(" 2.048"),
	compound_string(" 4.096"),
	compound_string("10.24"),
	compound_string(" 25.6"),
	compound_string(" 51.2"),
	compound_string(" 102.4"));
    chan_src_strs :  string_table(
	compound_string("DC Coupled"),
	compound_string("AC Coupled"),
	compound_string("Inverting DC"),
	compound_string("Inverting AC"),
	compound_string("Differential DC"),
	compound_string("Differential AC"),
	compound_string("Grounded DC"),
	compound_string("Grounded AC"));
    chan_src_codes :  string_table(
	compound_string("0"),
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"));
procedure AddListTree();
procedure TurnOnOff(integer);
procedure DisplayData();
procedure DisplayNci();
procedure ModifyData();
procedure SetupDevice();
procedure MenuUnmap();
procedure MTurnOnOff(integer);
procedure MSetupDevice();
procedure MDisplayData();
procedure MDisplayNci();
procedure MModifyData();
procedure CloseTree();
procedure OpenTree();

list BaseStyle : arguments {
};

list BaseStyleReasons : callbacks {
};

!(BX)list BaseStyleHandlers : handlers {
!(BX)};


!(BX)object dialogShell : XmDialogShell widget {
!(BX)    arguments {
!(BX)        XmNx = 136;
!(BX)        XmNy = 155;
!(BX)        XmNwidth = 877;
!(BX)        XmNheight = 432;
!(BX)    };
!(BX)    controls {
!(BX)         managed XmBulletinBoardDialog L6810C ;
!(BX)    };
!(BX)    callbacks {
!(BX)    };
!(BX)};

object L6810C  : XmBulletinBoardDialog widget {
    arguments {
        XmNautoUnmanage = false;
        XmNdefaultPosition = true;
        XmNresizePolicy = XmRESIZE_GROW;
        XmNnoResize = false;
        XmNdialogTitle = compound_string("L6810C  Lecroy 4 Channel Transie" &
 "nt Recorder");
        XmNx = 136;
        XmNy = 155;
        XmNwidth = 877;
        XmNheight = 432;
    };
    controls {
         managed user_defined segs;
         managed XmLabel label;
         managed user_defined dly;
         managed XmLabel label_dly;
         managed user_defined nidOptionMenu;
         managed XmLabelGadget labelGadget;
         managed XmLabelGadget labelGadget1;
         managed user_defined dsExprField;
         managed user_defined dsExprField1;
         managed user_defined dsXdBoxOnOffButton;
         managed user_defined dsXdBoxOnOffButton1;
         managed user_defined dsNidOptionMenu;
         managed user_defined dsNidOptionMenu1;
         managed user_defined dsExprField2;
         managed XmLabelGadget labelGadget2;
         managed XmLabelGadget labelGadget3;
         managed user_defined dsExprField3;
         managed user_defined dsCancelButton;
         managed user_defined dsResetButton;
         managed user_defined dsOkButton;
         managed user_defined dsApplyButton;
         managed XmBulletinBoard bulletinBoard;
         managed user_defined dsNidOptionMenu2;
    };
    callbacks {
    };
};

object dsNidOptionMenu2 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1"),
	compound_string("2"),
	compound_string("4"),
	compound_string("8"),
	compound_string("16"),
	compound_string("32"),
	compound_string("64"),
	compound_string("128"),
	compound_string("256"),
	compound_string("512"),
	compound_string("1024"),
	compound_string("2048"),
	compound_string("4096"),
	compound_string("8192"));
        XmNlabelString = compound_string("Samples/seg:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_ACTIVE_MEM;
        XmdsNlabelStrings = string_table(
	compound_string("1 K"),
	compound_string("2 K"),
	compound_string("4 K"),
	compound_string("8 K"),
	compound_string("16 K"),
	compound_string("32 K"),
	compound_string("64 K"),
	compound_string("128 K"),
	compound_string("256 K"),
	compound_string("512 K"),
	compound_string("1 Meg"),
	compound_string("2 Meg"),
	compound_string("4 Meg"),
	compound_string("8 Meg"));
        XmNx = 450;
        XmNy = 100;
    };
    controls {
    };
    callbacks {
    };
};

object bulletinBoard : XmBulletinBoard widget {
    arguments {
        XmNborderWidth = 1;
        XmNresizePolicy = XmRESIZE_NONE;
        XmNx = 13;
        XmNy = 138;
        XmNwidth = 851;
        XmNheight = 190;
    };
    controls {
         managed user_defined exprField3;
         managed user_defined exprField2;
         managed user_defined exprField1;
         managed user_defined exprField;
         managed XmLabelGadget labelGadget6;
         managed user_defined dsDigChans;
         managed user_defined dsNidOptionMenu3;
         managed user_defined dsNidOptionMenu4;
         managed user_defined dsNidOptionMenu5;
         managed user_defined dsNidOptionMenu6;
         managed XmLabelGadget labelGadget4;
         managed XmLabelGadget labelGadget5;
         managed user_defined dsNidOptionMenu7;
         managed user_defined dsNidOptionMenu8;
         managed user_defined dsNidOptionMenu9;
         managed user_defined dsNidOptionMenu10;
    };
    callbacks {
    };
};

object dsNidOptionMenu10 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810C$N_INPUTS + 3 * L6810C$K_NODES_PER_INP + L6810C$N_INP_SRC_CPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 629;
        XmNy = 128;
        XmNwidth = 138;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu9 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810C$N_INPUTS + 2 * L6810C$K_NODES_PER_INP + L6810C$N_INP_SRC_CPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 630;
        XmNy = 95;
        XmNwidth = 138;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu8 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810C$N_INPUTS + 1 * L6810C$K_NODES_PER_INP + L6810C$N_INP_SRC_CPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 629;
        XmNy = 64;
        XmNwidth = 138;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu7 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = chan_src_codes;
        XmdsNnidOffset = L6810C$N_INPUTS + 0 * L6810C$K_NODES_PER_INP + L6810C$N_INP_SRC_CPLING;
        XmdsNlabelStrings = chan_src_strs;
        XmNx = 628;
        XmNy = 31;
        XmNwidth = 138;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget5 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("src/coupling");
        XmNx = 653;
        XmNy = 11;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget4 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Full Scale");
        XmNx = 510;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu6 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810C$N_INPUTS + 3 * L6810C$K_NODES_PER_INP + L6810C$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 128;
        XmNwidth = 110;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu5 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810C$N_INPUTS + 2 * L6810C$K_NODES_PER_INP + L6810C$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 94;
        XmNwidth = 110;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu4 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810C$N_INPUTS + 1 * L6810C$K_NODES_PER_INP + L6810C$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 62;
        XmNwidth = 110;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu3 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = gains;
        XmdsNnidOffset = L6810C$N_INPUTS + 0 * L6810C$K_NODES_PER_INP + L6810C$N_INP_FULL_SCALE;
        XmdsNlabelStrings = gains;
        XmNx = 496;
        XmNy = 30;
        XmNwidth = 110;
        XmNheight = 36;
    };
    controls {
    };
    callbacks {
    };
};

object dsDigChans : user_defined procedure XmdsCreateDigChans widget {
    arguments {
        XmdsNnodesPerChannel = L6810C$K_NODES_PER_INP;
        XmdsNnid = DEVICE_NID;
        XmdsNchannels = 4;
        XmdsNendIdxNidOffset = L6810C$N_INP_ENDIDX;
        XmdsNstartIdxNidOffset = L6810C$N_INP_STARTIDX;
        XmdsNdataNidOffset = L6810C$N_INP_HEAD;
        XmdsNnidOffset = L6810C$N_INPUTS;
        XmNwidth = 472;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget6 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Offset");
        XmNx = 789;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object exprField : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 3;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_INPUTS + 0 * L6810C$K_NODES_PER_INP + L6810C$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 794;
        XmNy = 36;
    };
    controls {
    };
    callbacks {
    };
};

object exprField1 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 3;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_INPUTS + 1 * L6810C$K_NODES_PER_INP + L6810C$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 794;
        XmNy = 68;
    };
    controls {
    };
    callbacks {
    };
};

object exprField2 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 3;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_INPUTS + 2 * L6810C$K_NODES_PER_INP + L6810C$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 794;
        XmNy = 100;
    };
    controls {
    };
    callbacks {
    };
};

object exprField3 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 3;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_INPUTS + 3 * L6810C$K_NODES_PER_INP + L6810C$N_INP_OFFSET;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 794;
        XmNy = 132;
    };
    controls {
    };
    callbacks {
    };
};

object dsApplyButton : user_defined procedure XmdsCreateApplyButton widget {
    arguments {
        XmNx = 239;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsOkButton : user_defined procedure XmdsCreateOkButton widget {
    arguments {
        XmNx = 10;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsResetButton : user_defined procedure XmdsCreateResetButton widget {
    arguments {
        XmNx = 497;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsCancelButton : user_defined procedure XmdsCreateCancelButton widget {
    arguments {
        XmNx = 739;
        XmNy = 383;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField3 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = L6810C$N_STOP_TRIG;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 72;
        XmNy = 106;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget3 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Trigger:");
        XmNx = 10;
        XmNy = 109;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget2 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("External Clock:");
        XmNx = 259;
        XmNy = 76;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField2 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 20;
        XmdsNnidOffset = L6810C$N_EXT_CLOCK_IN;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 365;
        XmNy = 74;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu1 : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("0"),
	compound_string("20"),
	compound_string("50"),
	compound_string("100"),
	compound_string("200"),
	compound_string("500"),
	compound_string("1000"),
	compound_string("2000"),
	compound_string("5000"),
	compound_string("10000"),
	compound_string("20000"),
	compound_string("50000"),
	compound_string("100000"),
	compound_string("200000"),
	compound_string("500000"),
	compound_string("1000000"),
	compound_string("2000000"),
	compound_string("5000000"));
        XmNlabelString = compound_string("Internal Clock");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_FREQ;
        XmdsNlabelStrings = string_table(
	compound_string("External Clock"),
	compound_string("20  Hz"),
	compound_string("50  Hz"),
	compound_string("100 Hz"),
	compound_string("200 Hz"),
	compound_string("500 Hz"),
	compound_string("1   KHz"),
	compound_string("2   KHz"),
	compound_string("5   KHz"),
	compound_string("10  KHz"),
	compound_string("20  KHz"),
	compound_string("50  KHz"),
	compound_string("100 KHz"),
	compound_string("200 KHz"),
	compound_string("500 KHz"),
	compound_string("1   MHz"),
	compound_string("2   MHz"),
	compound_string("5   MHz"));
        XmNx = 10;
        XmNy = 69;
    };
    controls {
    };
    callbacks {
    };
};

object dsNidOptionMenu : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1 "),
	compound_string("2 "),
	compound_string("4 "));
        XmNlabelString = compound_string("Active Channels:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_ACTIVE_CHANS;
        XmdsNlabelStrings = string_table(
	compound_string("1 "),
	compound_string("2 "),
	compound_string("4 "));
        XmNx = 240;
        XmNy = 100;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton1 : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Store Action");
        XmdsNnidOffset = L6810C$N_STORE_ACTION;
        XmNx = 226;
        XmNy = 346;
        XmNwidth = 118;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
    };
};

object dsXdBoxOnOffButton : user_defined procedure XmdsCreateXdBoxOnOffButton widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNlabelString = compound_string("Initialization Action");
        XmdsNnidOffset = L6810C$N_INIT_ACTION;
        XmNx = 12;
        XmNy = 346;
        XmNwidth = 155;
        XmNheight = 32;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField1 : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = L6810C$N_COMMENT;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 108;
        XmNy = 38;
    };
    controls {
    };
    callbacks {
    };
};

object dsExprField : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNdefaultQuote = true;
        XmNcolumns = 32;
        XmdsNnidOffset = L6810C$N_NAME;
        XmNmarginHeight = 1;
        XmdsNautoQuote = true;
        XmNx = 110;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget1 : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string("Comment:");
        XmNx = 10;
        XmNy = 40;
    };
    controls {
    };
    callbacks {
    };
};

object labelGadget : XmLabelGadget widget {
    arguments {
        XmNlabelString = compound_string(" CAMAC Name:");
        XmNx = 11;
        XmNy = 10;
    };
    controls {
    };
    callbacks {
    };
};

object nidOptionMenu : user_defined procedure XmdsCreateNidOptionMenu widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmdsNvalueStrings = string_table(
	compound_string("1"),
	compound_string("2"),
	compound_string("3"),
	compound_string("4"),
	compound_string("5"),
	compound_string("6"),
	compound_string("7"),
	compound_string("8"),
	compound_string("9"),
	compound_string("10"),
	compound_string("11"),
	compound_string("12"),
	compound_string("13"),
	compound_string("14"),
	compound_string("15"),
	compound_string("16"));
        XmNlabelString = compound_string("Memory:");
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_MEMORIES;
        XmdsNlabelStrings = string_table(
	compound_string("512k"),
	compound_string("1 Meg"),
	compound_string("1.5 Meg"),
	compound_string(" 2 Meg"),
	compound_string("2.5 Meg"),
	compound_string("3 Meg"),
	compound_string("3.5 Meg"),
	compound_string("4 Meg"),
	compound_string("4.5 Meg"),
	compound_string("5 Meg"),
	compound_string("5.5 Meg"),
	compound_string("6 Meg"),
	compound_string("6.5 Meg"),
	compound_string("7 Meg"),
	compound_string("7.5 Meg"),
	compound_string("8 Meg "));
        XmNx = 699;
        XmNy = 98;
    };
    controls {
    };
    callbacks {
    };
};

object label : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Segments:");
        XmNx = 515;
        XmNy = 76;
    };
    controls {
    };
    callbacks {
    };
};

object segs : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 5;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_SEGMENTS;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 570;
        XmNy = 72;
    };
    controls {
    };
    callbacks {
    };
};

object label_dly : XmLabel widget {
    arguments {
        XmNlabelString = compound_string("Trigger Delay:");
        XmNx = 608;
        XmNy = 76;
    };
    controls {
    };
    callbacks {
    };
};

object dly : user_defined procedure XmdsCreateExprField widget {
    arguments {
        XmdsNnid = DEVICE_NID;
        XmNcolumns = 5;
        XmdsNputOnApply = true;
        XmdsNnidOffset = L6810C$N_TRIGGER_DLY;
        XmNmarginHeight = 1;
        XmNmarginWidth = 1;
        XmNx = 698;
        XmNy = 72;
    };
    controls {
    };
    callbacks {
    };
};

end module;
