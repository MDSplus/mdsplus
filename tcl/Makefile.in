include @top_builddir@/Makefile.inc

srcdir=@srcdir@
builddir=@builddir@
VPATH=@srcdir@
@AX_RECONFIGURE_TARGET@

CFLAGS += $(THREAD)
LDFLAGS += $(THREAD)

@MINGW_TRUE@ MDSTCL=mdstcl.bat
@MINGW_FALSE@ MDSTCL=mdstcl

SOURCES = $(wildcard @srcdir@/tcl_*.c)
@MINGW_TRUE@SOURCES += icon.o
OBJECTS = $(SOURCES:@srcdir@/%.c=%.o)
EXPORTS = tcl_commands.export

all:	@MAKEBINDIR@$(MDSTCL) @MAKESHLIBDIR@@LIBPRE@tcl_commands@SHARETYPE@

depend:
	 - @makedepend -- $(CFLAGS) -- $(SOURCES) 2>/dev/null

clean:
	@ $(RM) $(OBJECTS)
	@ $(RM) @MAKEBINDIR@$(MDSTCL)
	@ $(RM) @MAKESHLIBDIR@@LIBPRE@tcl_commands@SHARETYPE@

install: $(libdir) $(bindir)
	$(INSTALL) -m 755 @MAKESHLIBDIR@@LIBPRE@tcl_commands@SHARETYPE@ $(libdir)
	$(INSTALL) -m 755 @MAKEBINDIR@$(MDSTCL) $(bindir)

@MAKEBINDIR@$(MDSTCL): $(MDSTCL)
	$(INSTALL) -m 755 $< $@

cdudir = $(top_builddir)/cdu
CDU = $(cdudir)/cdu

tcl_commands.c-disabled:	tcl_commands.ocld
	if [ "@LIBPATH@" == "PATH" ]; then env PATH="@MAKESHLIBDIR@:$$(dirname $$(which gcc))" $(CDU) < tcl_commands.ocld;\
              else env @LIBPATH@=@MAKESHLIBDIR@ $(CDU) < tcl_commands.ocld; fi
	$(MAKE) depend

@MAKESHLIBDIR@@LIBPRE@tcl_commands@SHARETYPE@: $(OBJECTS)
	$(LINK.c) $(OUTPUT_OPTION) @LINKSHARED@ $^ -L@MAKESHLIBDIR@ -lMdsdcl -lMdsServerShr -lMdsShr -lTreeShr -lTdiShr -lMdsIpShr $(LIBS) @LIBREADLINE@
